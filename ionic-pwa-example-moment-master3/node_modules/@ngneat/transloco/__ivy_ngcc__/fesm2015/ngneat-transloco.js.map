{"version":3,"file":"ngneat-transloco.js","sources":["@ngneat/transloco/lib/transloco.loader.ts","@ngneat/transloco/lib/helpers.ts","@ngneat/transloco/lib/transloco.config.ts","@ngneat/transloco/lib/transloco.transpiler.ts","@ngneat/transloco/lib/transloco-missing-handler.ts","@ngneat/transloco/lib/transloco.interceptor.ts","@ngneat/transloco/lib/transloco-fallback-strategy.ts","@ngneat/transloco/lib/merge-config.ts","@ngneat/transloco/lib/shared.ts","@ngneat/transloco/lib/resolve-loader.ts","@ngneat/transloco/lib/get-fallbacks-loaders.ts","@ngneat/transloco/lib/transloco.service.ts","@ngneat/transloco/lib/loader-component.component.ts","@ngneat/transloco/lib/template-handler.ts","@ngneat/transloco/lib/transloco-lang.ts","@ngneat/transloco/lib/transloco-loading-template.ts","@ngneat/transloco/lib/transloco-scope.ts","@ngneat/transloco/lib/lang-resolver.ts","@ngneat/transloco/lib/scope-resolver.ts","@ngneat/transloco/lib/transloco.directive.ts","@ngneat/transloco/lib/transloco.pipe.ts","@ngneat/transloco/lib/transloco.module.ts","@ngneat/transloco/lib/transloco-testing.module.ts","@ngneat/transloco/lib/browser-lang.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAYa,aAAa;AAAG;AAAQ;AACzB;AAAQ,IAAlB,YAAoB,YAAsC;AAAI,QAA1C,iBAAY,GAAZ,YAAY,CAA0B;AAAC,KAAG;AAChE;AACO;AAAuB;AAAmB;AAAQ,IAAvD,cAAc,CAAC,IAAY;AAAI,QAC7B,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACjD,KAAG;AACH,CAAC;AACD;AACA,MAAa,gBAAgB,GAAG,IAAI,cAAc,CAAc,kBAAkB,CAAC;AACnF;AAAC;AAAI;AAAkC;AAAkC;AAAsI;ACpB/M;AAAI;AAAkB;AAEP;AAAe;AAA9B,SAAgB,QAAQ,CAAC,GAAW,EAAE,IAAY;AAClD;AACE,IAAA,IAAI,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACvC,QAAI,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,KAAG;AACH,IAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;AAAM;AAAoB;AAG1C;AAAmB;AAAQ,IAHV,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAE,GAAG,CAAC,CAAC;AAC1D,CAAC;AACD;AACG;AAAkB;AAAmB;AAAkB;AAC9C;AADZ,SAAgB,QAAQ,CAAC,GAAQ,EAAE,IAAY,EAAE,GAAQ;AACzD,IAAE,GAAG,qBAAQ,GAAG,CAAE,CAAC;AACnB;AACoB,UAAZ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/B;AAAqB,UAAb,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;AACpC,IACE,KAAK,CAAC,MAAM;AAAM;AACjB;AAAuB;AACP;AAEjB;AAAQ,IAJK,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK;AAChC,QAAI,IAAI,KAAK,KAAK,SAAS,EAAE;AAC7B,YAAM,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AACtB,SAAK;AAAC,aAAK;AACX,YAAM,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,qBAAQ,GAAG,CAAC,IAAI,CAAC,CAAE,CAAC;AAClF,SAAK;AACL,QACI,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC5B,KAAG,GAAE,GAAG,CAAC,CAAC;AACV,IACE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AACG;AAAyB;AACpB;AADR,SAAgB,IAAI,CAAC,UAAU;AAC/B,IAAE,IAAI,CAAC,UAAU,EAAE;AACnB,QAAI,OAAO,CAAC,CAAC;AACb,KAAG;AACH,IACE,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACjC,QAAI,OAAO,UAAU,CAAC,MAAM,CAAC;AAC7B,KAAG;AACH,IACE,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC5B,QAAI,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;AAC1C,KAAG;AACH,IACE,OAAO,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9C,CAAC;AACD;AACG;AAAyB;AACvB;AADL,SAAgB,OAAO,CAAC,UAAU;AAClC,IAAE,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AACD;AACG;AAAkB;AAAe;AAApC,SAAgB,UAAU,CAAC,GAAQ;AAAI,IACrC,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;AACnC,CAAC;AACD;AACG;AAAkB;AAAe;AAApC,SAAgB,QAAQ,CAAC,GAAQ;AAAI,IACnC,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjC,CAAC;AACD;AACG;AAAkB;AAAe;AAApC,SAAgB,QAAQ,CAAC,GAAQ;AAAI,IACnC,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;AACjC,CAAC;AACD;AACG;AAAmB;AAAe;AAArC,SAAgB,QAAQ,CAAC,IAAI;AAAI,IAC/B,OAAO,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAClE,CAAC;AACD;AACG;AAAkB;AACpB;AADD,SAAgB,WAAW,CAAC,GAAG;AAC/B,IAAE,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC;AACD;AACE;AACS;AACT;AAC4C;AACA;AACA;AAC5C;AACC;AACA;AAAkB;AAAe;AAApC,SAAgB,WAAW,CAAC,GAAW;AAAI,IACzC,OAAO,GAAG;AACZ,SAAK,OAAO,CAAC,qBAAqB;AAAO;AAAuB;AAAwB;AAAmB;AACrG,IAD8B,CAAC,IAAI,EAAE,KAAK,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAC;AAC5G,SAAK,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;AAChC,CAAC;AACD;AACG;AAAe;AAAlB,SAAgB,SAAS;AACzB,IAAE,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;AACvC,CAAC;AACD;AACG;AAAoB;AACrB;AADF,SAAgB,KAAK,CAAC,KAAU;AAChC,IAAE,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC;AACD;AACG;AAAoB;AAAe;AAAtC,SAAgB,SAAS,CAAC,KAAU;AACpC,IAAE,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AAChC,CAAC;AACD;AACG;AAAoB;AAAe;AAAtC,SAAgB,QAAQ,CAAC,KAAsB;AAAI,IACjD,IAAI,QAAQ,CAAC,KAAK,CAAC;AAAE,QAAA,OAAO,KAAK,CAAC;AACpC,IACE,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;AACpE,QAAI,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACzB,KAAG;AACH,IACE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACG;AAAmB;AAAe;AAArC,SAAgB,aAAa,CAAC,IAAS;AAAI,IACzC,OAAO,IAAI,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC;AAChD,CAAC;AACD;AACG;AAAmB;AAAe;AAArC,SAAgB,eAAe,CAAC,IAAS;AAAI,IAC3C,OAAO,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC;AACD;AACG;AAAkB;AAAe;AAApC,SAAgB,SAAS,CAAC,GAAgB;AAAI,IAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAC7C,CAAC;AACD;AACG;AAAkB;AAAe;AAApC,SAAgB,OAAO,CAAC,GAAgB;AAAI,IAC1C,OAAO,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AACnC,CAAC;AACD;AAAC;AAAI;AAAkC;AAA2C;AAAsI;ACzHxN;AAuBA,MAAa,gBAAgB,GAAG,IAAI,cAAc,CAAC,kBAAkB,EAAE;AACvE,IAAE,UAAU,EAAE,MAAM;AACpB,IAAE,OAAO;AAAO;AAEf;AAGD,IALW;AACX,QAAI,OAAO,EAAE,CAAC;AACd,KAAG,CAAA;AACH,CAAC,CAAC;AACF;AACA,MAAa,aAAa,GAAoB;AAC9C,IAAE,WAAW,EAAE,IAAI;AACnB,IAAE,oBAAoB,EAAE,KAAK;AAC7B,IAAE,QAAQ,EAAE,KAAK;AACjB,IAAE,aAAa,EAAE,CAAC;AAClB,IAAE,cAAc,EAAE,EAAE;AACpB,IAAE,cAAc,EAAE;AAClB,QAAI,aAAa,EAAE,IAAI;AACvB,QAAI,sBAAsB,EAAE,KAAK;AACjC,QAAI,UAAU,EAAE,KAAK;AACrB,KAAG;AACH,IAAE,OAAO,EAAE;AACX,QAAI,GAAG,EAAE,KAAK;AACd,KAAG;AACH,IAAE,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAC7B,CAAC;AACD;AACG;AACW;AAEG;AAAe;AAAhC,SAAgB,sBAAsB,CAAC,SAAmC,aAAa;AAAI,IACzF,OAAO;AACT,QAAI,OAAO,EAAE,gBAAgB;AAC7B,QAAI,QAAQ,oBAAO,aAAa,EAAK,MAAM,CAAE;AAC7C,KAAG,CAAC;AACJ,CAAC;AACD;AACG;AAC+B;AAChC;AAEE;AAEJ;AAAe;AAAf,SAAgB,eAAe,CAAC,SAAmC,aAAa;AAAI,IAClF,yBAAY,aAAa,EAAK,MAAM,EAAG;AACzC,CAAC;AACD;AAAC;AAAI;AAAkC;AAA+C;AAAsI;AClE5N;AAKA,MAAa,oBAAoB,GAAG,IAAI,cAAc,CAAC,sBAAsB,CAAC;AAC9E,MAOa,iBAAiB;AAAG;AAAQ;AAClC;AAAQ,IAEb,YAAkD,UAA4B;AAChF,QAAI,IAAI,CAAC,oBAAoB,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC;AAC3D,KAAG;AACH;AACO;AAAwB;AAA0B;AAChD;AACR;AAAQ,IAFP,SAAS,CAAC,KAAU,EAAE,SAAkB,EAAE,EAAE,WAAwB;AAAI,QACtE,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzB,YAAM,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB;AAAO;AAC1C;AACE;AACb;AAAgB,YAHgC,CAAC,CAAC,EAAE,KAAK;AAC/D,gBAAQ,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;AAC7B,gBAAQ,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;AACtC,oBAAU,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,iBAAS;AACT,gBACQ,OAAO,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC;AAC5G,aAAO,EAAC,CAAC;AACT,SAAK;AAAC,aAAK,IAAI,MAAM,EAAE;AACvB,YAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC3B,gBAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AAC9D,aAAO;AAAC,iBAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACvC,gBAAQ,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AAC7D,aAAO;AACP,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEC;AACE;AAEF;AAAO;AACE;AACE;AACE;AAER;AAEH;AACK;AAAS;AAChB;AAAyB;AAGV;AAAS;AAAO;AAEH;AAAO;AACE;AACE;AAId;AAAO;AAAO;AAAkB;AAAwB;AAC7D;AAEM;AACpB;AAAQ,IAJH,YAAY,CAAC,KAAU,EAAE,SAAkB,EAAE,EAAE,WAAwB;AACnF;AAEA,YAFQ,MAAM,GAAG,KAAK;AACtB,QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO;AAAM;AACf;AAAuB;AAAY,QADzB,CAAC;AACjC;AACM;AAA6B,kBAAvB,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AACnC;AACM;AAA6B,kBAAvB,SAAS,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C;AAEK;AAA6B,kBAAtB,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,WAAW,CAAC;AAClE;AAEK,YAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAC/C,SAAK,EAAC,CAAC;AACP,QACI,OAAO,MAAM,CAAC;AAClB,KAAG;AACH;AACO;AAAkB;AAAwB;AAA0B;AAC5D;AAAmB;AAAQ,IAD9B,WAAW,CAAC,KAAe,EAAE,SAAkB,EAAE,EAAE,WAAwB;AACvF,QAAI,OAAO,KAAK,CAAC,GAAG;AAAM;AAAwB;AAGlD;AACW,QAJU,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAC,CAAC;AAClE,KAAG;AACH;AACA;AACkB;AAA2C,4CAzE9C,QAAQ,YAAI,MAAM,SAAC,gBAAgB;AAAQ;AAAG;AAAI;AAC1D;AAAe;AAwEtB,SAAS,cAAc,CAAC,UAA4B;AAAI,UAChD,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,UAAU,IAAI,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,aAAa,GAAG,aAAa,CAAC,aAAa;AACtH,IACE,OAAO,IAAI,MAAM,CAAC,GAAG,KAAK,QAAQ,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;AAChD,CAAC;AACD;AACG;AAAyB;AAAe;AAI3C,SAAgB,eAAe,CAAC,UAAkB;AAAI;AAC3C,UAAH,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;AAC1D;AACE,UADM,IAAI,GAAG,EAAE;AACjB,IAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C;AAAyB,YAAjB,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAClC,QAAI,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;AAC7C,YAAM,CAAC,EAAE,CAAC;AACV,YAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrD,SAAK;AACL,QAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,KAAG;AACH,IACE,OAAO,IAAI,CAAC;AACd,CAAC;AAGD,MAAa,oBAAqB,SAAQ,iBAAiB;AAAG;AAAQ;AAClE;AAAQ,IAAV,YAAoB,QAAkB;AACxC,QAAI,KAAK,EAAE,CAAC;AACZ,QAFsB,aAAQ,GAAR,QAAQ,CAAU;AAAC,KAEtC;AACH;AACO;AAAwB;AAA0B;AAChD;AACT;AAAQ,IAFN,SAAS,CAAC,KAAU,EAAE,SAAkB,EAAE,EAAE,WAAwB;AAAI;AACtD,YAAZ,UAAU,GAAG,KAAK;AAC1B,QAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzB,YAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,4BAA4B;AAAO;AAAgC;AAE/F;AAA+B;AAA2B;AAAgB,YAFhB,CAAC,KAAa,EAAE,YAAoB,EAAE,IAAY;AACjH,gBAAQ,IAAI;AACZ;AAAqC,0BAArB,IAAI,GAAgC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC;AACnF,oBACU,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,iBAAS;AAAC,gBAAA,OAAO,CAAC,EAAE;AACpB;AAAqC,wBAAvB,OAAO,GAAG,0BAA0B,KAAK;AACvD,wHAAwH,YAAY,cAAc;AAClJ,oBAAU,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACvD,wBAAY,OAAO,GAAG,sBAAsB,YAAY,2DAA2D,CAAC;AACpH,qBAAW;AACX,oBAAU,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AACnC,iBAAS;AACT,aAAO,EAAC,CAAC;AACT,SAAK;AACL,QACI,OAAO,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AAC5D,KAAG;AACH;gDA3BC,UAAU;4HACT;AAAC;AAAmB;AAA8C,YAnHvB,QAAQ;AAAG;;;yEAAE;AAAC;AAAC;AAAI;AACtD;AACI;AACuD;ACHrE;AAKA,MAAa,yBAAyB,GAAG,IAAI,cAAc,CAAC,2BAA2B,CAAC;AACxF,MASa,cAAc;AAAG;AAAQ;AAAsB;AACxC;AAAmB;AAAQ,IAA7C,MAAM,CAAC,GAAW,EAAE,MAAuB;AAC7C,QAAI,IAAI,MAAM,CAAC,cAAc,CAAC,aAAa,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACjE;AAA6B,kBAAjB,GAAG,GAAG,4BAA4B,GAAG,GAAG;AACpD,YAAM,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE,6BAA6B,CAAC,CAAC;AAC/D,SAAK;AACL,QACI,OAAO,GAAG,CAAC;AACf,KAAG;AACH;;;AAAC;AACD;AAAC;AAAI;AAAkC;AAAgD;AAAsI;ACzB7N;AAGA,MAAa,qBAAqB,GAAG,IAAI,cAAc,CAAC,uBAAuB,CAAC;AAChF,MAOa,kBAAkB;AAAG;AAAQ;AACpC;AAAuB;AAAmB;AAAQ,IAAtD,kBAAkB,CAAC,WAAwB,EAAE,IAAY;AAAI,QAC3D,OAAO,WAAW,CAAC;AACvB,KAAG;AACH;AACO;AAAsB;AAAwB;AACrD;AACC;AAEE,IAJD,qBAAqB,CAAC,GAAW,EAAE,KAAa,EAAE,IAAY;AAAI,QAChE,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;;;AAAC;AACD;AAAC;AAAI;AAAkC;AAAsD;AAAsI;ACpBnO;AAGA,MAAa,2BAA2B,GAAG,IAAI,cAAc,CAA4B,6BAA6B,CAAC;AACvH,MAKa,uBAAuB;AAAG;AAAQ;AAC/C;AAAQ,IAAN,YAA8C,UAA2B;AAAI,QAA/B,eAAU,GAAV,UAAU,CAAiB;AAAC,KAAG;AAC/E;AACO;AAA6B;AAClB;AAAQ,IADxB,YAAY,CAAC,UAAkB;AACjC;AAAyB,cAAf,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY;AACrD,QAAI,IAAI,CAAC,YAAY,EAAE;AACvB,YAAM,MAAM,IAAI,KAAK,CAAC,sFAAsF,CAAC,CAAC;AAC9G,SAAK;AACL,QACI,OAAO,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,GAAG,CAAC,YAAY,CAAC,CAAC;AACvE,KAAG;AACH;AACA;AAAmB;AAAiD,4CAXrD,MAAM,SAAC,gBAAgB;AAAQ;AAAG;AAAC;AAAI;AAE/C;AACE;AAEsD;AAAI;AAAI;AAA4B;AAG7F;AAAe;AChBrB,SAAgB,WAAW,CAAC,aAA8B,EAAE,UAAoC;AAChG,IAAE,yBACK,aAAa,EACb,UAAU,IACb,cAAc,oBACT,aAAa,CAAC,cAAc,EAC5B,UAAU,CAAC,cAAc,GAE9B,OAAO,oBACF,aAAa,CAAC,OAAO,EACrB,UAAU,CAAC,OAAO,KAEvB;AACJ,CAAC;AACD;AAAC;AAAI;AAAkC;AAAiC;AAAsI;ACf9M;AAAG;AAAY;AAAG;AAAoC;AACpD;AAAI;AAAI;AAAmB;AACxB;AAQL,SAAgB,gBAAgB,CAAC,IAAY;AAAI,IAC/C,IAAI,CAAC,IAAI,EAAE;AACb,QAAI,OAAO,EAAE,CAAC;AACd,KAAG;AACH;AAAqB,UAAb,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/B,IAAE,KAAK,CAAC,GAAG,EAAE,CAAC;AACd,IAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC;AACD;AACE;AACS;AACT;AAC0B;AAC1B;AACC;AACA;AAAmB;AAAe;AAArC,SAAgB,gBAAgB,CAAC,IAAY;AAAI,IAC/C,IAAI,CAAC,IAAI,EAAE;AACb,QAAI,OAAO,EAAE,CAAC;AACd,KAAG;AACH;AAAqB,UAAb,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/B,IAAE,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC;AACrB,CAAC;AACD;AACG;AAEH;AACA;AACA;AACA;AACA;AACc;AAAoB;AAAoB;AAAe;AAArE,SAAgB,YAAY,CAAC,GAAW,EAAE,KAAa,EAAE,IAAI,GAAG,GAAG;AAAI,IACrE,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;AACrB;AAAyB,cAAf,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;AACpC;AAAyB,cAAf,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE;AACnC,QAAI,OAAO,QAAQ,KAAK,KAAK,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAChF,KAAG;AACH,IACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrB,CAAC;AACD;AACG;AAAsB;AAAmB;AAAe;AAA3D,SAAgB,yBAAyB,CAAC,OAAyB,EAAE,IAAY;AACjF,UAAQ,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC;AAClD,IAAE,IAAI,SAAS,KAAK,KAAK,EAAE;AAC3B;AACI,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC;AAC/C,KAAG;AACH;AAEC,IAAC,OAAO,KAAK,CAAC;AACf,CAAC;AACD;AACG;AAAiC;AAAe;AAAnD,SAAgB,mBAAmB,CAAC,kBAA2B;AAC/D,IAAE,OAAO,kBAAkB;AAAQ;AAEnC;AACkB;AAAQ,IAHI,MAAM,IAAI,MAAM,IAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AACD;AACG;AAA2B;AACzB;AAAe;AADpB,SAAS,YAAY,CAAC,YAAY,EAAE,KAAK;AACzC,IAAE,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM;AAAM;AACrC;AAAuB;AAC/B;AAAQ,IAFgC,CAAC,GAAG,EAAE,IAAI;AACpD,QAAI,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AACjD,QAAI,OAAO,GAAG,CAAC;AACf,KAAG,GAAE,EAAE,CAAC,CAAC;AACT,CAAC;AACD;AACG;AAA4B;AAAoB;AAAe;AAAlE,SAAgB,mBAAmB,CAAC,aAAoC,EAAE,KAAa;AAAI,IACzF,OAAO,eAAe,CAAC,aAAa,CAAC,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;AAC3F,CAAC;AACD;AACG;AAAmB;AAAe;AAArC,SAAgB,eAAe,CAAC,IAAY;AAC5C,IAAE,OAAO;AACT,QAAI,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI;AACzC,QAAI,QAAQ,EAAE,gBAAgB,CAAC,IAAI,CAAC;AACpC,QAAI,IAAI;AACR,KAAG,CAAC;AACJ,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyC;AAAsI;AClFtN;AAAI;AAAmB;AAEhB;AACJ;AACG;AAAe;AAFrB,SAAgB,aAAa,CAC3B,IAAY,EACZ,UAA2B,EAC3B,YAA0B,EAC1B,IAAyB;AACxB,IACD,IAAI,YAAY,EAAE;AACpB;AAAyB,cAAf,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC;AACzC,QAAI,IAAI,UAAU,CAAC,UAAU,CAAC,KAAK,KAAK,EAAE;AAC1C,YAAM,MAAM,iEAAiE,IAAI,EAAE,CAAC;AACpF,SAAK;AACL,QACI,OAAO,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;AAAM;AAA0B;AAG9D;AAAY,QAHmB,GAAG,KAAK,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,EAAC,CAAC;AAC/E,KAAG;AACH,IACE,OAAO,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/C,CAAC;AACD;AAAC;AAAI;AAAkC;AAAgD;AAAsI;ACrB7N;AAAI;AAAuB;AACF;AACb;AAA2B;AAC/B;AAAe;AAGvB,SAAgB,mBAAmB,CACjC,QAAgB,EAChB,YAAoB,EACpB,UAA2B,EAC3B,YAA0B,EAC1B,IAAyB;AACxB,IACD,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG;AAAM;AACzB;AAAmB;AAAQ,IADP,IAAI;AAC1C;AAAyB,cAAf,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC;AACtE,QACI,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CACtB,GAAG;AAAM;AAEf;AACI;AACE,QAJI,WAAW,KAAK;AAC1B,YAAQ,WAAW;AACnB,YAAQ,IAAI,EAAE,IAAI;AAClB,SAAO,CAAC,EAAC,CACJ,CAAC;AACN,KAAG,EAAC,CAAC;AACL,CAAC;AACD;AAAC;AAAI;AAAkC;AAA4C;AAAsI;ACxBzN;AAAiB,IAgCb,OAAyB;AAC7B;AACG;AAAe;AAAkB;AAAsB;AAAoB;AAAe;AAA7F,SAAgB,SAAS,CAAU,GAAoB,EAAE,SAAkB,EAAE,EAAE,IAAa;AAAI,IAC9F,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9C,CAAC;AAGD,MAAa,gBAAgB;AAAG;AAAQ;AAC5B;AAAyB;AACL;AAC3B;AAA6B;AAC3B;AAAQ,IAab,YACgD,MAAuB,EAC/B,MAA2B,EACtB,cAAuC,EAC3C,WAAiC,EACtC,UAA2B,EAChB,gBAA2C;AACzF,QAN+C,WAAM,GAAN,MAAM,CAAiB;AAAC,QAChC,WAAM,GAAN,MAAM,CAAqB;AAAC,QACvB,mBAAc,GAAd,cAAc,CAAyB;AAAC,QAC5C,gBAAW,GAAX,WAAW,CAAsB;AAAC,QACvC,eAAU,GAAV,UAAU,CAAiB;AAAC,QACjB,qBAAgB,GAAhB,gBAAgB,CAA2B;AAC5F,QAtBU,iBAAY,GAAG,IAAI,GAAG,EAAuB,CAAC;AACxD,QAAU,UAAK,GAAG,IAAI,GAAG,EAAmC,CAAC;AAC7D,QAAU,sBAAiB,GAAkB,IAAI,CAAC;AAClD,QAEU,mBAAc,GAAmB,EAAE,CAAC;AAC9C,QAAU,0BAAqB,GAAG,KAAK,CAAC;AACxC,QAGU,WAAM,GAAG,IAAI,OAAO,EAAmB,CAAC;AAClD,QAAE,YAAO,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AACvC,QACU,gBAAW,GAAG,IAAI,GAAG,EAAU,CAAC;AAC1C,QASI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,YAAM,IAAI,CAAC,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACzD,SAAK;AACL,QAAI,OAAO,GAAG,IAAI,CAAC;AACnB,QAAI,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AAC/D,QACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;AAC7D,QAAI,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjE,QAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AACvD,QAAI,IAAI,CAAC,IAAI,GAAG,IAAI,eAAe,CAAS,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;AACnE;AACI;AACI,QAAJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AACjD;AAEG;AACI;AACI,QAAP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAAM;AAC9B;AAAuB;AAAY,QADV,CAAC;AAChD,YAAM,IAAI,CAAC,CAAC,IAAI,KAAK,wBAAwB,IAAI,CAAC,CAAC,UAAU,EAAE;AAC/D;AACQ;AAAiC,sBAA3B,IAAI,GAAG,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;AACrD,gBAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjC,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AACO;AAAmB;AAC1B,IADE,IAAI,MAAM;AAAK,QACb,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,KAAG;AACH;AACO;AACF;AAAQ,IADX,cAAc;AAChB,QAAI,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH;AACO;AAAuB;AACd;AAAQ,IADtB,cAAc,CAAC,IAAY;AAC7B,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC5B,KAAG;AACH;AACO;AACD;AAAQ,IADZ,aAAa;AACf,QAAI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChC,KAAG;AACH;AACO;AAAsB;AACZ;AACH;AAAsB;AAAQ,IAF1C,aAAa,CAAC,IAAY;AAC5B,QAAI,mBAAA,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,QAAI,mBAAA,IAAI,GAAC,MAAM,CAAC,aAAa,IAAI,mBAAA,IAAI,GAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjE,QAAI,0BAAO,IAAI,GAAC;AAChB,KAAG;AACH;AACO;AAAwB;AAC1B;AAAQ,IADX,iBAAiB,CAAC,KAAqB;AACzC,QAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAChC,KAAG;AACH;AAEC;AACE;AACE;AACK;AACE;AAEJ;AAAQ,IAAd,iBAAiB;AACnB,QAAI,OAAO,IAAI,CAAC,cAAc,CAAC;AAC/B,KAAG;AACH;AACO;AAAuB;AAA2B;AACxD;AAAQ,IADP,IAAI,CAAC,IAAY,EAAE,UAAuB,EAAE;AAAI,QAC9C,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;AACxC;AAA6B,gBAAnB,eAAuF;AACjG;AAA6B,kBAAjB,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AAC9C;AAA6B,kBAAjB,KAAK,GAAG,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI;AAC3D,YAAM,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;AAC7C;AACQ;AAAiC,sBAA3B,QAAQ,GAAG,OAAO,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC,iBAAiB;AAChG;AACgC,sBAAlB,OAAO,GAAG,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC;AACzG,gBAAQ,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC5C,aAAO;AAAC,iBAAK;AACb;AAAiC,sBAAnB,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC;AACxF,gBAAQ,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,aAAO;AACP;AAC4B,kBAAhB,KAAK,GAAG,eAAe,CAAC,IAAI,CAChC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAChC,GAAG;AAAM;AACS;AACjB;AAAgB,YAFb,WAAW;AACvB,gBAAU,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;AAC1C,oBAAY,WAAW,CAAC,OAAO;AAAM;AACH;AACtB;AAAwB,oBAFJ,CAAC;AACjC,wBAAc,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;AACxD;AACU,wBAAI,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;AACnC,4BAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/C,yBAAe;AACf,qBAAa,EAAC,CAAC;AACf,oBAAY,OAAO;AACnB,iBAAW;AACX,gBAAU,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAChD,aAAS,EAAC,EACF,UAAU;AAAM;AAA2B;AAC7C,YADa,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,EAAC,EACnD,WAAW,CAAC,CAAC,CAAC,CACf;AACP,YACM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClC,SAAK;AACL,QACI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAChC,KAAG;AACH;AAEC;AACE;AACE;AAEF;AAAO;AACE;AACE;AACE;AACE;AAEJ;AAAmB;AAAsB;AAA0B;AAC3E;AAAmB;AACzB,IAFE,SAAS,CAAU,GAAoB,EAAE,SAAkB,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE;AAAI,QAC5F,IAAI,CAAC,GAAG;AAAE,YAAA,0BAAO,GAAG,GAAQ;AAChC,cACU,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;AACjE,QACI,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC5B,YAAM,0BAAO,GAAG,CAAC,GAAG;AAAM;AAA4B;AAA2B;AAAgB,YAA5E,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAC,GAAQ;AACnG,SAAK;AACL,QACI,GAAG,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,GAAG,GAAG,CAAC;AAC1C;AACwB,cAAd,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;AACxD;AAAyB,cAAf,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC;AAClC,QACI,IAAI,CAAC,KAAK,EAAE;AAChB,YAAM,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AACxD,SAAK;AACL,QACI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AAC7D,KAAG;AACH;AAEC;AACE;AACE;AAEF;AAAO;AACE;AACE;AACE;AAGT;AAAO;AACT;AACJ;AACI;AAAwB;AAE7B;AAAmB;AACb,IANJ,eAAe,CACb,GAAoB,EACpB,MAAgB,EAChB,IAA8B,EAC9B,SAAS,GAAG,KAAK;AAClB;AACI,YAAC,YAAY,GAAG,IAAI;AAC3B;AAAyB,cAAf,IAAI;AAAQ;AAA2B;AACnB;AACd;AAAY,QAFX,CAAC,IAAI,EAAE,OAAqB,KACvC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAC3B,GAAG;AAAM;AAAuB;AAAY,QAAxC,OAAO,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,EAAC,CACrG,CAAA;AACP,QAAI,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;AACrB,YAAM,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS;AAAM;AAG5C;AACJ;AAAgB,YAJ2B,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;AACnE,SAAK;AACL,QACI,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;AAC7B;AACM;AAA6B,kBAAvB,aAAa,sBAAG,IAAI,EAAiB;AACjD,YAAM,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC;AACjC,YAAM,YAAY,GAAG,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7E,SAAK;AACL,QACI,IAAI,sBAAG,IAAI,EAAU,CAAC;AAC1B,QAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;AACzD,YAAM,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,SAAK;AACL;AACI;AACC,cADK,KAAK,GAAG,IAAI;AACtB,QAAI,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS;AAAM;AAA2B;AAC3E;AAGC,QAJ0C,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,CAAC,EAAC,CAAC,CAAC;AACjG,KAAG;AACH;AAEC;AACE;AACE;AAEF;AAAO;AACE;AAEJ;AAAgB;AACnB;AAAmB;AAAQ,IADtB,eAAe,CAAC,IAAY;AACtC,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/C,KAAG;AACH;AAEC;AAAmB;AAAsB;AAEhC;AAEK;AAAmB;AAAQ,IAOxC,eAAe,CAAU,GAA0B,EAAE,MAAgB,EAAE,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE;AAAI,QACpG,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC7C,YAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC9B,gBAAQ,0BAAO,GAAG,CAAC,GAAG;AAAM;AAAgC;AAA+B;AACxF,gBADoB,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,GAAG,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAC,GAAQ;AAC3G,aAAO;AACP,kBAAY,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;AACnE;AAC4B,kBAAhB,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;AAC1D,YAAM,GAAG,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,GAAG,GAAG,CAAC;AAC5C;AAC4B,kBAAhB,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AACpE;AACM,YAAA,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AACpH,SAAK;AACL;AACwB,cAAd,YAAY,GAAQ,EAAE;AAChC,QAAI,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACxD,YAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AACnE,SAAK;AACL,QACI,OAAO,YAAY,CAAC;AACxB,KAAG;AACH;AACO;AAAmB;AAAsB;AAA0B;AACvE;AAAmB;AAAQ,IAE5B,qBAAqB,CACnB,GAA0B,EAC1B,MAAgB,EAChB,IAAa;AACd,QACC,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC7C,YAAM,OAAO,IAAI,CAAC,eAAe,CAAI,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9D,SAAK;AACL,cACU,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AACnE;AAEG;AACI,QAAH,OAAO,IAAI,CAAC,qBAAqB,CAAI,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CACpE,GAAG;AAAM;AACO;AACf;AAAY,QAFT,KAAK;AACf;AAA6B,kBAAf,YAAY,GAAG,CAAC,KAAK,CAAC;AACpC,YAAQ,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;AAC5C,gBAAU,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAI,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1E,aAAS;AACT,YACQ,OAAO,YAAY,CAAC;AAC5B,SAAO,EAAC,CACH,CAAC;AACN,KAAG;AACH;AAEC;AAA+B;AAAmB;AACjD,IASA,cAAc,CAAC,WAAoB;AAAI,QACrC,IAAI,WAAW,EAAE;AACrB,YAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;AACpC,gBAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACxD,aAAO;AAAC,iBAAK;AACb;AACQ,sBAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;AAC5E;AAAiC,sBAAnB,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE;AACpE,gBACQ,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AACvD,aAAO;AACP,SAAK;AACL,QACI,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,KAAG;AACH;AAEC;AACE;AACE;AAEF;AAAO;AACE;AACE;AACE;AAEJ;AAAwB;AAAmB;AACtD,IADC,iBAAiB,CAAC,IAAa;AAAI;AACrC,YAAQ,SAAS,GAAG,IAAI,CAAC,YAAY;AACrC,QAAI,IAAI,IAAI,EAAE;AACd;AAA6B,kBAAjB,kBAAkB,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,IAAI;AAChE,YAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,kBAAkB,EAAE;AACnD,gBAAQ,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AAC7B,aAAO;AAAC,iBAAK;AACb,gBAAQ,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG;AAAM;AAChD;AAGgB;AAAoB,gBAJO,WAAW,IAAI,GAAG,IAAI,IAAI,WAAW,EAAE,EAAC,CAAC,CAAC;AACzF,aAAO;AACP,SAAK;AACL,QACI,OAAO,SAAS,CAAC,IAAI,CAAC,SAAS;AAAM;AAA+B;AAAuB;AAAY,QAAvE,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG;AAAM;AAAuB;AAAY,QAAxC,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;AACrH,KAAG;AACH;AAEC;AACE;AACE;AAEF;AAAO;AACE;AACE;AACE;AAEJ;AAA8B;AAAwB;AAA2B;AAC5F;AAAQ,IADP,cAAc,CAAC,WAAwB,EAAE,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,EAAE,UAAiC,EAAE;AAC3G;AAAyB,cAAf,QAAQ,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;AACtD;AAAyB,cAAf,aAAa,qBAAQ,QAAQ,EAAK,OAAO,CAAE;AACrD;AAAyB,cAAf,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC;AACxC;AAEG;AACI;AAEJ;AAAqB;AAAY,YAA5B,yBAAyB,GAAG,WAAW;AAC/C;AAEG,QAAC,IAAI,KAAK,EAAE;AACf;AAA6B,kBAAjB,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AAC5C,YAAM,yBAAyB,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,WAAW,EAAE,CAAC,CAAC;AAClE,SAAK;AACL;AACwB,cAAd,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI;AAC7D;AACwB,cAAd,iBAAiB,sBACjB,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GACxD,yBAAyB,CAC7B;AACL;AACwB,cAAd,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC7G;AAAyB,cAAf,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,WAAW,CAAC;AACzF,QAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AACjD,QAAI,aAAa,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;AACzE,KAAG;AACH;AAEC;AACE;AACE;AAEF;AAAO;AACE;AACE;AAEJ;AAAsB;AAAwB;AACvD;AAAmB;AAAQ,IAD1B,iBAAiB,CAAC,GAAW,EAAE,KAAa,EAAE,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE;AAC3E;AAAyB,cAAf,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;AAC7E;AACE,cADQ,QAAQ,qBACT,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAC5B,CAAC,GAAG,GAAG,QAAQ,GAChB;AACL,QACI,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACxC,KAAG;AACH;AAEC;AACE;AACH;AACa;AAAQ,IAAnB,oCAAoC,CAAC,EAAE,YAAY,EAAyC;AAAI;AAC/E,cAAT,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY;AAC7E,QAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,YAAY,EAAE;AAC3D,YAAM,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACpC,SAAK;AACL,KAAG;AACH;AAEC;AACG;AACgB;AAAwB;AACvC;AAAmB;AAAQ,IAD9B,iBAAiB,CAAC,GAAW,EAAE,KAAU,EAAE,MAAgB;AAC7D,QAAI,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,IAAI,KAAK,KAAK,EAAE,EAAE;AAC/D,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK;AACL,QACI,IAAI,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACtE;AACM,YAAA,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;AACxC;AAA6B,kBAAjB,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC;AAC/E,YAAM,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;AACzC,YAAM,OAAO,aAAa,CAAC;AAC3B,SAAK;AACL,QACI,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,qBAAqB,EAAE,EAAE,MAAM,CAAC,CAAC;AACjF,KAAG;AACH;AAEC;AACG;AACiB;AACb;AAAQ,IADd,aAAa,CAAC,IAAY;AAC5B,QAAI,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,KAAG;AACH;AAEC;AACE;AACS;AAAmB;AACE;AAEJ;AAC1B,IADD,MAAM,CAAC,IAAY;AAAI,QACrB,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,KAAG;AACH;AAEC;AACG;AACE;AACE;AAEJ;AAAuB;AAAgC;AAAmB;AAAQ,IAApF,iBAAiB,CAAC,IAAY,EAAE,YAA2B;AAAI;AAAyB,cAChF,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC;AAC3C,QACI,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;AACzE,YAAM,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AACnF,SAAK;AACL,QAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC;AAC7C,KAAG;AACH;AAEC;AACG;AACwB;AAAmB;AACxC,IADL,sBAAsB,CAAC,WAAmB;AAC5C,QAAI,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,EAAE;AACxF,YAAM,OAAO,GAAG,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;AACtD,SAAK;AACL,QAAI,OAAO,WAAW,CAAC;AACvB,KAAG;AACH;AAEC;AACG;AACkB;AAAwB;AAC9B;AAAQ,IADtB,cAAc,CAAC,KAAa,EAAE,KAAa;AAC7C,QAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;AACzC,YAAM,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;AAC1C,SAAK;AACL,QAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AAClD,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW;AACb,QAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AACpC,KAAG;AACH;AACO;AAAgB;AACvB;AAAmB;AAAQ,IADjB,mBAAmB,CAAC,IAAY;AAC1C,QAAI,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,KAAG;AACH;AACO;AAAgB;AAAmB;AACrC,IADK,oBAAoB;AAAK;AACpB,cAAL,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;AAC7C,QACI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzB,YAAM,0BAAO,IAAI,CAAC,iBAAiB,EAAE,GAAa;AAClD,SAAK;AACL,QACI,OAAO,oBAAC,IAAI,CAAC,iBAAiB,EAAE,IAAsB,GAAG;AAAM;AAGvD;AAAuB;AAAY,QAHe,CAAC,IAAI,CAAC,CAAC,EAAE,EAAC,CAAC;AACzE,KAAG;AACH;AACO;AAAgB;AAAmB;AAAQ,IAAxC,qBAAqB;AAAK,QAChC,yBACK,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,EAChC,cAAc,EAAE,IAAI,CAAC,cAAc,EACnC,WAAW,EAAE,IAAI,CAAC,WAAW,IAC7B;AACN,KAAG;AACH;AAEC;AACE;AACE;AACU;AAAwB;AAC/B;AAAQ,IADN,sBAAsB,CAAC,IAAa;AAC9C,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,sBAAsB,IAAI,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC;AAChG,KAAG;AACH;AACO;AAAgB;AAAuB;AACpC;AAAmB;AAAQ,IAD3B,aAAa,CAAC,IAAY,EAAE,WAAwB;AAC9D,QAAI,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;AAClE,QAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrB,YAAM,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI;AACzC,YAAM,IAAI,EAAE,wBAAwB;AACpC,YAAM,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC;AACpC,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,CAAC,WAAW,CAAC,OAAO;AAAM;AACjC;AAAuB;AAGvB,QAJ4B,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;AACxD,QAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;AAC7B,KAAG;AACH;AACO;AAAgB;AAAuB;AACpC;AAAmB;AAAQ,IAD3B,aAAa,CAAC,IAAY,EAAE,WAAwB;AAC9D;AACI;AACI,QAAJ,IAAI,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;AAC1C,YAAM,WAAW,CAAC,aAAa,GAAG,CAAC,CAAC;AACpC,YACM,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;AACtC,gBAAQ,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC7E,aAAO;AACP,SAAK;AACL;AACwB,cAAd,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACpC;AAAyB,cAAf,SAAS,GAAG,WAAW,CAAC,aAAa;AAC/C;AAAyB,cAAf,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC;AACzD,QAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC/B;AAEG,QAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAClC,YAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClE,YAAM,OAAO,KAAK,CAAC;AACnB,SAAK;AACL;AACwB,cAAd,cAAc,GAAG,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACrE,QACI,IAAI,CAAC,QAAQ,IAAI,cAAc,EAAE;AACrC;AAA6B,gBAAnB,GAAG,GAAG,2DAA2D;AAC3E,YAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,gBAAQ,GAAG,IAAI,sCAAsC,CAAC;AACtD,aAAO;AACP,YACM,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAK;AACL;AACwB,YAAhB,WAAW,GAAG,QAAQ;AAC9B;AACI,QAAA,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B;AACM;AACM,YAAN,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;AAC/C,YAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,SAAK;AACL,QACI,WAAW,CAAC,aAAa,EAAE,CAAC;AAChC,QAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrB,YAAM,IAAI,EAAE,wBAAwB;AACpC,YAAM,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC;AACpC,SAAK,CAAC,CAAC;AACP,QACI,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AAC/C,KAAG;AACH;AACO;AAAgB;AAAwB;AAC/B;AAAQ,IADd,cAAc,CAAC,KAAa;AAAI,cAChC,EAAE,YAAY,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM;AAC7C,QAAI,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AACrD,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAgB;AAAuB;AAC3B;AAAQ,IADX,mBAAmB,CAAC,IAAY;AAC1C;AAAyB,YAAjB,WAAW,GAAG,IAAI;AAC1B;AAES,YAFD,KAAK;AACb,QACI,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;AAClC;AACM;AAA6B,kBAAvB,aAAa,GAAG,gBAAgB,CAAC,IAAI,CAAC;AAClD;AACM;AAA6B,kBAAvB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAChD;AACM,YAAA,WAAW,GAAG,OAAO,GAAG,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACnE;AACM,YAAA,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3E,SAAK;AACL,QAAI,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;AAClC,KAAG;AACH;AACO;AAAgB;AAA8B;AAC5C;AACJ;AAAQ,IAFH,cAAc,CAAC,WAAwB,EAAE,GAAW;AAC9D;AACE,cADQ,MAAM,GAAG,EAAE;AACrB;AAAyB,cAAf,MAAM,GAAG,GAAG,GAAG,GAAG;AAC5B,QACI,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;AAC1C,YAAM,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACzC,gBAAQ,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;AACzE,aAAO;AACP,SAAK;AACL,QACI,OAAO,MAAM,CAAC;AAClB,KAAG;AACH;AACO;AAAgB;AAAsB;AACzC;AAAQ,IADF,UAAU,CAAC,GAAmC;AACxD,QAAI,OAAO,GAAG,YAAY,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACpE,KAAG;AACH;4CAnmBC,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;oIAC7B;AAAC;AAAmB;AACX,4CAiBT,QAAQ,YAAI,MAAM,SAAC,gBAAgB;AAAS,4CAC5C,MAAM,SAAC,oBAAoB;AAAS,4CACpC,MAAM,SAAC,yBAAyB;AAAS,4CACzC,MAAM,SAAC,qBAAqB;AAAS,4CACrC,MAAM,SAAC,gBAAgB;AAAS,4CAChC,MAAM,SAAC,2BAA2B;AAAQ;AAAG;;;;;;;;;;;;;;;;;;;;;;;;kCAUb;AAAC;AAAC;AAAI;AACtB;AACf;AAEF;AC5EJ,MAOa,wBAAwB;AAAG;oDALvC,SAAS,SAAC,kBACT,QAAQ,EAAE;8CAET,cACF;;;;6BACE;AAAC;AACG,mBAAJ,KAAK;AAAI;;;;;;;;;;oBAAE;AAAC;AAAC;AAAI;AAEK;AAA2C;AAAsI;ACV1M,MAMa,eAAe;AAAG;AACxB;AAAuB;AAEX;AAAQ,IAAzB,YAAoB,IAAU,EAAU,GAAqB;AAAI,QAA7C,SAAI,GAAJ,IAAI,CAAM;AAAC,QAAS,QAAG,GAAH,GAAG,CAAkB;AAAC,QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;AAAC,KACpC;AAAC;AAEC;AACC;AAAQ,IADZ,UAAU;AAAK,QACb,IAAI,IAAI,CAAC,IAAI,YAAY,WAAW,EAAE;AAAE,YACtC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAAC,SACzC;AAAC,aAAK,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAAE;AACV,kBAAhB,YAAY,GAAG,IAAI,CAAC,eAAe,CAA2B,wBAAwB,CAAC;AAAE,YAC/F,YAAY,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAAC,YACxC,YAAY,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;AAAC,SACxC;AAAC,aAAK;AAAE,YACP,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAAC,SAClC;AAAC,KACH;AAAC;AAEC;AACC;AAAQ,IADZ,UAAU;AAAK,QACb,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAAC,KACnB;AAAC;AAEC;AAAgB;AAAmB;AAAsB;AAC9C;AAAQ,IADd,eAAe,CAAI,GAAc;AAAI;AACxC,cAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC;AAAE;AACrC,cAAd,OAAO,GAAG,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC;AAAE,QAElD,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAAC,KAC3C;AAAC,CACH;AAAC;AACF;AAAI;AAAkC;AAAyC;AAAsI;ACpCrN;AAEA,MAAa,cAAc,GAAG,IAAI,cAAc,CAAS,gBAAgB,CAAC;AAC1E;AAAC;AAAI;AAAkC;AAAqD;AAAsI;ACHlO;AAEA,MAAa,0BAA0B,GAAG,IAAI,cAAc,CAC1D,4BAA4B,CAC7B;AACD;AAAC;AAAI;AAAkC;AAA0C;AAAsI;ACLvN;AAGA,MAAa,eAAe,GAAG,IAAI,cAAc,CAAiB,iBAAiB,CAAC;AACpF;AAAC;AAAI;AAAkC;AAAwC;AAAsI;ACJrN,MAQa,YAAY;AACzB,IADA;AAAgB,QACd,gBAAW,GAAG,KAAK,CAAC;AACtB,KAyDC;AACD;AAAoC;AAAQ;AAAuB;AAAmB;AAAQ,IAxD5F,OAAO,CACL,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,KAAyB,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE;AACjH;AACmB,YAAd,IAAI,GAAG,MAAM;AACrB;AACI;AACI;AAEJ;AAAY,QAAZ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,YAAM,IAAI,GAAG,MAAM,CAAC;AACpB,YAAM,OAAO,IAAI,CAAC;AAClB,SAAK;AACL,QACI,IAAI,QAAQ,EAAE;AAClB,kBAAY,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;AAC7D,YAAM,IAAI,GAAG,SAAS,CAAC;AACvB,SAAK;AACL,QACI,IAAI,MAAM,EAAE;AAChB,kBAAY,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC3D,YAAM,IAAI,GAAG,SAAS,CAAC;AACvB,SAAK;AACL,QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC5B,QAAI,OAAO,IAAI,CAAC;AAChB,KAAG;AACH;AAEC;AACE;AAEH;AAAO;AAEF;AAAO;AACE;AAGT;AAAO;AAAuB;AACvB;AAAQ,IADlB,uBAAuB,CAAC,IAAY;AACtC;AAAyB,cAAf,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC;AACxC,QAAI,OAAO,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACjD,KAAG;AACH;AAEC;AACE;AAEH;AAAO;AAEF;AAAO;AACE;AAGT;AAAO;AAAuB;AAAwB;AAC1C;AAAQ,IADvB,eAAe,CAAC,IAAY,EAAE,KAAyB;AACzD,QAAI,OAAO,KAAK,GAAG,GAAG,KAAK,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC;AAC7C,KAAG;AACH,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyC;AAAsI;AClEtN,MAOa,aAAa;AAC1B;AAAQ;AAAmC;AAAQ,IAAjD,YAAoB,gBAAkC;AAAI,QAAtC,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,KAAG;AAC5D;AAEC;AAAQ;AAAuB;AAAmB;AAAQ,IAAzD,OAAO,CAAC,EAAE,MAAM,EAAE,QAAQ,KAA0B,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE;AAAI,QAChG,IAAI,MAAM,EAAE;AAChB,YAAM,OAAO,MAAM,CAAC;AACpB,SAAK;AACL,QACI,IAAI,QAAQ,EAAE;AAClB,YAAM,IAAI,aAAa,CAAC,QAAQ,CAAC,EAAE;AACnC,sBAAc,EAAE,KAAK,EAAE,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,EAAE,sBAAG,QAAQ,EAAiB;AAC/E,gBAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3D,gBAAQ,OAAO,KAAK,CAAC;AACrB,aAAO;AACP,YACM,0BAAO,QAAQ,GAAW;AAChC,SAAK;AACL,QACI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH,CAAC;AACD;AAAC;AAAI;AAAkC;AAA8C;AAAsI;AC/B3N,MA8Ba,kBAAkB;AAAG;AAAQ;AACvC;AAAsB;AACL;AACC;AAAqC;AAAsB;AAE/D;AACZ;AAAQ,IAcX,YACU,gBAAkC,EACtB,GAAuE,EAC9C,aAAyC,EAC1C,YAA2B,EACf,kBAAsC,EACtF,GAAqB,EACrB,GAAsB,EACtB,IAAgB;AACzB,QARS,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACvB,QAAG,GAAH,GAAG,CAAoE;AAAC,QAC/C,kBAAa,GAAb,aAAa,CAA4B;AAAC,QAC3C,iBAAY,GAAZ,YAAY,CAAe;AAAC,QAChB,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QACvF,QAAG,GAAH,GAAG,CAAkB;AAAC,QACtB,QAAG,GAAH,GAAG,CAAmB;AAAC,QACvB,SAAI,GAAJ,IAAI,CAAY;AAC5B,QA1BU,oBAAe,GAAuD,EAAE,CAAC;AACnF,QAE4B,WAAM,GAAY,EAAE,CAAC;AACjD,QAMU,qBAAgB,GAAoB,IAAI,CAAC;AACnD;AACM,QAAI,gBAAW,GAAG,KAAK,CAAC;AAC9B,QACU,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAC5C,QAAU,kBAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACnE,KAUM;AACN;AACO;AACI;AAAQ,IADjB,QAAQ;AACV;AAAyB,cAAf,kBAAkB,GAAG,yBAAyB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC;AACrH,QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;AAC1D,aAAO,IAAI,CACH,SAAS;AAAM;AACD;AAAuB;AACvC,QAFY,UAAU;AAC5B;AAA6B,kBAAb,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACjD,gBAAY,MAAM,EAAE,IAAI,CAAC,UAAU;AACnC,gBAAY,QAAQ,EAAE,IAAI,CAAC,YAAY;AACvC,gBAAY,MAAM,EAAE,UAAU;AAC9B,aAAW,CAAC;AACZ,YACU,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;AAClD,kBAAc,QAAQ,CACN,oBAAmB,IAAI,CAAC,aAAa,IAAE,GAAG;AAAM;AAA4C;AAErG;AAAoB,gBAFgC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC,EAAC,CACpG;AACf,kBAAc,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1D,SAAS,EAAC,EACF,mBAAmB,CAAC,kBAAkB,CAAC,CACxC;AACP,aAAO,SAAS;AAAM;AACF;AAAY,QADf;AACjB,YAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChF,YAAQ,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/G,YAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAChC,YAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,SAAO,EAAC,CAAC;AACT;AACwB,cAAd,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;AAC3C,QAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,UAAU,EAAE;AACzC,YAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACxE,YAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;AACzC,SAAK;AACL,KAAG;AACH;AACO;AACC;AAAmB;AAAQ,IADjC,WAAW,CAAC,OAAO;AACrB;AACI;AACI;AAAyB,cAAvB,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;AAAM;AAAwB;AAC/D;AAAY,QADsB,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,KAAK,EAAC;AACpF,QAAI,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;AACrC,KAAG;AACH;AACO;AAAgB;AACV;AAAQ,IADX,cAAc;AACxB,QAAI,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,QAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACjH,KAAG;AACH;AACO;AAAgB;AAAuB;AAAuB;AACpD;AAAQ,IADf,kBAAkB,CAAC,IAAY,EAAE,IAAwB;AACnE,QAAI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC9B,QACI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB;AACM,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACvE,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,YAAY,EAAE,CAAC;AAC1B,YAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE;AACxD,gBAAQ,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;AAClD,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH;AACO;AAAgB;AAAuB;AAAuB;AAAmB;AAAQ,IAAtF,cAAc,CAAC,IAAY,EAAE,IAAwB;AAAI,QAC/D;AAAY;AAA0B;AAClB;AAAuB;AAC1C,QAFM,CAAC,GAAW,EAAE,MAAe;AACxC;AAA6B,kBAAjB,QAAQ,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG;AACpD;AAA6B,kBAAjB,UAAU,GAAG,MAAM,GAAG,GAAG,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,GAAG,QAAQ;AACnF,YAAM,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;AAC3D,gBAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;AACtD,aAAO;AACP,YAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG;AACzC,gBAAQ,MAAM;AACd,gBAAQ,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC;AACtE,aAAO,CAAC;AACR,YACM,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;AACpD,SAAK,EAAC;AACN,KAAG;AACH;AACO;AAAgB;AACf;AAAQ,IADN,aAAa;AAAK,QACxB,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC;AACrD,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW;AACb,QAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AACzD,KAAG;AACH;AACO;AAAgB;AACR;AAAQ,IADb,YAAY;AACtB,QAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;AAChE,KAAG;AACH;AACO;AAAgB;AAAuB;AAAgC;AAAmB;AAAQ,IAA/F,YAAY,CAAC,IAAY,EAAE,aAA6B;AAAI;AAAyB,YACvF,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;AACzG,QAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AACvE;AAAyB,cAAf,YAAY,GAAG,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC;AAC1E,QAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAC5E,KAAG;AACH;8CAhIC,SAAS,SAAC,kBACT,QAAQ,EAAE,aAAa,cACxB;uaACI;AAAC;AAAmB;AAA4C,YAT5D,gBAAgB;AAAI,YAV3B,WAAW,uBAyCR,QAAQ;AAAO,4CACf,QAAQ,YAAI,MAAM,SAAC,eAAe;AAAS,4CAC3C,QAAQ,YAAI,MAAM,SAAC,cAAc;AAAS,4CAC1C,QAAQ,YAAI,MAAM,SAAC,0BAA0B;AAAS,YA1CzD,gBAAgB;AACf,YAbD,iBAAiB;AACjB,YACA,UAAU;AACX;AAAG;AAGA,kBA4BD,KAAK,SAAC,WAAW;AAAO,qBACxB,KAAK,SAAC,iBAAiB;AAAO,0BAC9B,KAAK,SAAC,gBAAgB;AAAO,yBAC7B,KAAK,SAAC,eAAe;AAAO,yBAC5B,KAAK,SAAC,eAAe;AAAO,wBAC5B,KAAK,SAAC,qBAAqB;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAI;AAExC;AACU;AAGI;AC9ClB,MAea,aAAa;AAAG;AAAQ;AAC9B;AAAgC;AACrB;AACZ;AAAQ,IAMZ,YACU,gBAAkC,EACG,aAAyC,EAC1C,YAA2B,EAC/D,GAAsB;AAC/B,QAJS,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACE,kBAAa,GAAb,aAAa,CAA4B;AAAC,QAC3C,iBAAY,GAAZ,YAAY,CAAe;AAAC,QAChE,QAAG,GAAH,GAAG,CAAmB;AAClC,QAbU,iBAAY,GAAwB,IAAI,CAAC;AACnD,QAAU,cAAS,GAAW,EAAE,CAAC;AACjC,QAGU,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAC5C,QAAU,kBAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACnE,QAOI,IAAI,CAAC,kBAAkB,GAAG,yBAAyB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAClG,KAAG;AACH;AAEC;AAAQ;AAAsB;AAA0B;AAA8B;AACtF;AAAQ,IADP,SAAS,CAAC,GAAkB,EAAE,MAA4B,EAAE,UAA+B;AAAI,QAC7F,IAAI,CAAC,GAAG,EAAE;AACd,YAAM,OAAO,GAAG,CAAC;AACjB,SAAK;AACL;AACwB,cAAd,OAAO,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,GAAG,GAAG;AACpE,QACI,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;AAClC,YAAM,OAAO,IAAI,CAAC,SAAS,CAAC;AAC5B,SAAK;AACL,QACI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,QAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AACzD,QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;AAC1D,aAAO,IAAI,CACH,SAAS;AAAM;AACD;AAAuB;AACvC,QAFY,UAAU;AAC5B;AAA6B,kBAAb,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACjD,gBAAY,MAAM,EAAE,UAAU;AAC9B,gBAAY,QAAQ,EAAE,IAAI,CAAC,YAAY;AACvC,gBAAY,MAAM,EAAE,UAAU;AAC9B,aAAW,CAAC;AACZ,YACU,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC;AAClD,kBAAc,QAAQ,CACN,oBAAmB,IAAI,CAAC,aAAa,IAAE,GAAG;AAAM;AAA4C;AAErG;AAAoB,gBAFgC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC,EAAC,CACpG;AACf,kBAAc,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1D,SAAS,EAAC,EACF,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAC7C;AACP,aAAO,SAAS;AAAM;AAAuB;AAE5C,QAFgB,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,EAAC,CAAC;AACtD,QACI,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW;AACb,QAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;AACzD,KAAG;AACH;AACO;AAAgB;AAAsB;AACzC;AAAmB;AAAQ,IADrB,WAAW,CAAC,GAAW,EAAE,MAA4B;AAC/D;AAAyB,cAAf,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC;AACrE,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACxE,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AACH;AACO;AAAgB;AAAuB;AAAgC;AAAmB;AAAQ,IAA/F,YAAY,CAAC,IAAY,EAAE,aAA6B;AAAI;AAAyB,YACvF,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC;AAClG,QAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AACvE;AAAyB,cAAf,YAAY,GAAG,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC;AAC1E,QAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AAC5E,KAAG;AACH;yCA3EC,IAAI,SAAC,kBACJ,IAAI,EAAE,WAAW,kBACjB,IAAI,EAAE,KAAK,cACZ;mGACI;AAAC;AAAmB;AAAuC,YAdvD,gBAAgB;AAAI,4CAyBxB,QAAQ,YAAI,MAAM,SAAC,eAAe;AAAS,4CAC3C,QAAQ,YAAI,MAAM,SAAC,cAAc;AAAS,YA3BtC,iBAAiB;AAAG;;;;;;;;;;;;;;;;;sEAAE;AAAC;AAAC;AAAI;AAAkC;AAC1D;AAEE;ACHf;AAUA,MAAa,gBAAgB,GAAG;AAChC,IAAE;AACF,QAAI,OAAO,EAAE,oBAAoB;AACjC,QAAI,QAAQ,EAAE,iBAAiB;AAC/B,QAAI,IAAI,EAAE,CAAC,gBAAgB,CAAC;AAC5B,KAAG;AACH,IAAE;AACF,QAAI,OAAO,EAAE,yBAAyB;AACtC,QAAI,QAAQ,EAAE,cAAc;AAC5B,KAAG;AACH,IAAE;AACF,QAAI,OAAO,EAAE,qBAAqB;AAClC,QAAI,QAAQ,EAAE,kBAAkB;AAChC,KAAG;AACH,IAAE;AACF,QAAI,OAAO,EAAE,2BAA2B;AACxC,QAAI,QAAQ,EAAE,uBAAuB;AACrC,QAAI,IAAI,EAAE,CAAC,gBAAgB,CAAC;AAC5B,KAAG;AACH,CAAC;AAQD,MAAa,eAAe;AAAG;2CAN9B,QAAQ,SAAC,kBACR,YAAY,EAAE,CAAC;UAAkB,EAAE,aAAa,EAAE,wBAAwB,CAAC,kBAC3E;IAAS,EAAE,CAAC,gBAAgB,CAAC,kBAC7B,OAAO,EAAE,CAAC,kBAAkB,EAAE;EAAa,CAAC,kBAC5C,eAAe,EAAE,CAAC,wBAAwB,CAAC,cAC5C;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACE;AAAmD;AAAsI;ACtCtM;AAAiB,MAcX,oBAAoB,GAAG,IAAI,cAAc,CAC7C,oDAAoD,CACrD;AACD;AAAiB,MAAX,sBAAsB,GAAG,IAAI,cAAc,CAA0B,0CAA0C,CAAC;AAGtH,MAAa,aAAa;AAAG;AAAQ;AAChC;AAAQ,IAAX,YAAkD,KAA2B;AAAI,QAA/B,UAAK,GAAL,KAAK,CAAsB;AAAC,KAAG;AACnF;AACO;AAAuB;AAAmB;AAAQ,IAAvD,cAAc,CAAC,IAAY;AAAI,QAC7B,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAChC,KAAG;AACH;yCAPC,UAAU;uGACT;AAAC;AAAmB;AACjB,4CAAU,MAAM,SAAC,oBAAoB;AAAQ;;;;;;kCAAE;AAAC;AAAI;AAAsB;AAEhE;AAAuB;AAAe;AAKrD,SAAgB,oBAAoB,CAClC,OAAyB,EACzB,QAA8B,EAAE,EAChC,OAAgC;AAC/B;AACiB,UAAZ,eAAe;AAAQ;AACb;AACjB,IAFyB,MACtB,OAAO,CAAC,YAAY;AACxB,UAAQ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG;AAAM;AAA2B;AAC7D;AAAY,QADiB,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAC,CAAC;AACnF,UAAQ,OAAO,CAAC,OAAO,EAAE,CAAA;AACzB,IACE,OAAO,eAAe,CAAC;AACzB,CAAC;AAKD,MAAa,sBAAsB;AACnC;AAAQ;AAA0B;AAClC;AAAQ,IADN,OAAO,OAAO,CAAC,OAAgC;AACjD,QAAI,OAAO;AACX,YAAM,QAAQ,EAAE,sBAAsB;AACtC,YAAM,SAAS,EAAE;AACjB,gBAAQ;AACR,oBAAU,OAAO,EAAE,oBAAoB;AACvC,oBAAU,QAAQ,EAAE,OAAO,CAAC,KAAK;AACjC,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,sBAAsB;AACzC,oBAAU,QAAQ,EAAE,OAAO;AAC3B,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,eAAe;AAClC,oBAAU,UAAU,EAAE,oBAAoB;AAC1C,oBAAU,IAAI,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,sBAAsB,CAAC;AAChF,oBAAU,KAAK,EAAE,IAAI;AACrB,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,gBAAgB;AACnC,oBAAU,QAAQ,EAAE,aAAa;AACjC,iBAAS;AACT,gBAAQ,gBAAgB;AACxB,gBAAQ;AACR,oBAAU,OAAO,EAAE,gBAAgB;AACnC,oBAAU,QAAQ,EAAE,eAAe,iBACvB,QAAQ,EAAE,IAAI,EACd,cAAc,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE,IACrC,OAAO,CAAC,eAAe,EAC1B;AACZ,iBAAS;AACT,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH;AACO;AACF;AACI;AACP;AAA2B;AACxB;AAAQ,IAHX,OAAO,SAAS,CACd,KAA2B,EAC3B,SAAmC,EAAE,EACrC,UAAmC,EAAE;AACtC,QACC,OAAO;AACX,YAAM,QAAQ,EAAE,sBAAsB;AACtC,YAAM,SAAS,EAAE;AACjB,gBAAQ;AACR,oBAAU,OAAO,EAAE,oBAAoB;AACvC,oBAAU,QAAQ,EAAE,KAAK;AACzB,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,sBAAsB;AACzC,oBAAU,QAAQ,EAAE,OAAO;AAC3B,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,eAAe;AAClC,oBAAU,UAAU,EAAE,oBAAoB;AAC1C,oBAAU,IAAI,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,sBAAsB,CAAC;AAChF,oBAAU,KAAK,EAAE,IAAI;AACrB,iBAAS;AACT,gBAAQ;AACR,oBAAU,OAAO,EAAE,gBAAgB;AACnC,oBAAU,QAAQ,EAAE,aAAa;AACjC,iBAAS;AACT,gBAAQ,gBAAgB;AACxB,gBAAQ;AACR,oBAAU,OAAO,EAAE,gBAAgB;AACnC,oBAAU,QAAQ,EAAE,eAAe,iBACvB,QAAQ,EAAE,IAAI,EACd,cAAc,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE,IACrC,MAAM,EACT;AACZ,iBAAS;AACT,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH;kDA9EC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC,eAAe,CAAC;GAC3B;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACJ;AAAuC;AAM1C;ACnDJ;AAAI;AAGkB;AAAe;AAErC,SAAgB,cAAc;AAAK;AAClC,QAAK,WAAW,GAAG,qBAAqB,EAAE;AAC3C,IAAE,IAAI,SAAS,EAAE,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;AAC7C,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH,IACE,IAAI,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AACvC,QAAI,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,KAAG;AACH,IACE,IAAI,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AACvC,QAAI,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,KAAG;AACH,IACE,OAAO,WAAW,CAAC;AACrB,CAAC;AACD;AACG;AACqE;AAE9D;AAAV,SAAgB,qBAAqB;AAAK,IACxC,IAAI,SAAS,EAAE,KAAK,KAAK,EAAE;AAC7B,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;AACoB,UAAZ,SAAS,sBAAG,MAAM,CAAC,SAAS,EAAO;AAC3C;AAAqB,QAAf,kBAAkB,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;AAC9E,IAAE,kBAAkB,GAAG,kBAAkB,IAAI,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,eAAe,IAAI,SAAS,CAAC,YAAY,CAAC;AACvH,IACE,OAAO,kBAAkB,CAAC;AAC5B,CAAC;AACD;AAAC;AAAI;AAAkC;AAAgC;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAAiC;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAAuC;AAAsI;AAAI;AAAC;;AvBpCA,AAYA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,ACnBA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAUA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,ACxHA,AAujtEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAylHA,AAAA,ACAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAUA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AACA,ACxBA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAQA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,ACndjFA,AAEA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,ACpBA,AAMA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,ACvBA,AAgCA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAGA,AAAA,AAAA,AAiBA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AALA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAraacaA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAYA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAYA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAWA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAQA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAQA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAMA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAOA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAlmBA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAmnCA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,ACFA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,ACJA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,ACHA,AAQA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AA0DA,AAvjEA,AAOA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AACA,AC9BA,AA8BA,AAAA,AAoBA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAPA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAzyCA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AA1CA,AAAA,AAZA,AAAA,AAEA,AAAA,AAgCA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,ACxCA,AAebA,AAAA,AAyBA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AA3BA,AAAA,ACAA,AAUA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAQA,AAAA,AAAA,AANA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,ACpCA,AAcsourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Translation } from './types';\n\nexport interface TranslocoLoader {\n  getTranslation(lang: string, data?: TranslocoLoaderData): Observable<Translation> | Promise<Translation>;\n}\n\nexport type TranslocoLoaderData = {\n  scope: string;\n};\n\nexport class DefaultLoader implements TranslocoLoader {\n  constructor(private translations: Map<string, Translation>) {}\n\n  getTranslation(lang: string): Observable<Translation> {\n    return of(this.translations.get(lang) || {});\n  }\n}\n\nexport const TRANSLOCO_LOADER = new InjectionToken<Translation>('TRANSLOCO_LOADER');\n","import { ProviderScope, Translation } from './types';\nimport flat from 'flat';\n\nexport function getValue(obj: object, path: string) {\n  /* For cases where the key is like: 'general.something.thing' */\n  if (obj && obj.hasOwnProperty(path)) {\n    return obj[path];\n  }\n  return path.split('.').reduce((p, c) => p && p[c], obj);\n}\n\nexport function setValue(obj: any, prop: string, val: any) {\n  obj = { ...obj };\n\n  const split = prop.split('.');\n  const lastIndex = split.length - 1;\n\n  split.reduce((acc, part, index) => {\n    if (index === lastIndex) {\n      acc[part] = val;\n    } else {\n      acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n}\n\nexport function size(collection) {\n  if (!collection) {\n    return 0;\n  }\n\n  if (Array.isArray(collection)) {\n    return collection.length;\n  }\n\n  if (isObject(collection)) {\n    return Object.keys(collection).length;\n  }\n\n  return !!collection ? collection.length : 0;\n}\n\nexport function isEmpty(collection) {\n  return size(collection) === 0;\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === 'function';\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val: any): val is number {\n  return typeof val === 'number';\n}\n\nexport function isObject(item): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function coerceArray(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\n/*\n * @example\n *\n * given: path-to-happiness => pathToHappiness\n * given: path_to_happiness => pathToHappiness\n * given: path-to_happiness => pathToHappiness\n *\n */\nexport function toCamelCase(str: string): string {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => (index == 0 ? word.toLowerCase() : word.toUpperCase()))\n    .replace(/\\s+|_|-|\\//g, '');\n}\n\nexport function isBrowser() {\n  return typeof window !== 'undefined';\n}\n\nexport function isNil(value: any) {\n  return value === null || value === undefined;\n}\n\nexport function isDefined(value: any) {\n  return isNil(value) === false;\n}\n\nexport function toNumber(value: number | string): number | null {\n  if (isNumber(value)) return value;\n\n  if (isString(value) && !isNaN(Number(value) - parseFloat(value))) {\n    return Number(value);\n  }\n\n  return null;\n}\n\nexport function isScopeObject(item: any): item is ProviderScope {\n  return item && typeof item.scope === 'string';\n}\n\nexport function hasInlineLoader(item: any): item is ProviderScope {\n  return item && isObject(item.loader);\n}\n\nexport function unflatten(obj: Translation): Translation {\n  return flat.unflatten(obj, { safe: true });\n}\n\nexport function flatten(obj: Translation): Translation {\n  return flat(obj, { safe: true });\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { AvailableLangs, HashMap } from './types';\n\nexport type TranslocoConfig = {\n  defaultLang: string;\n  reRenderOnLangChange?: boolean;\n  prodMode?: boolean;\n  fallbackLang?: string | string[];\n  failedRetries?: number;\n  /** @deprecated */\n  scopeMapping?: HashMap<string>;\n  availableLangs?: AvailableLangs;\n  flatten?: {\n    aot?: boolean;\n  };\n  missingHandler?: {\n    logMissingKey?: boolean;\n    useFallbackTranslation?: boolean;\n    allowEmpty?: boolean;\n  };\n  interpolation?: [string, string];\n};\n\nexport const TRANSLOCO_CONFIG = new InjectionToken('TRANSLOCO_CONFIG', {\n  providedIn: 'root',\n  factory: () => {\n    return {};\n  }\n});\n\nexport const defaultConfig: TranslocoConfig = {\n  defaultLang: 'en',\n  reRenderOnLangChange: false,\n  prodMode: false,\n  failedRetries: 2,\n  availableLangs: [],\n  missingHandler: {\n    logMissingKey: true,\n    useFallbackTranslation: false,\n    allowEmpty: false\n  },\n  flatten: {\n    aot: false\n  },\n  interpolation: ['{{', '}}']\n};\n\n/**\n * @deprecated\n */\nexport function provideTranslocoConfig(config: Partial<TranslocoConfig> = defaultConfig): Provider {\n  return {\n    provide: TRANSLOCO_CONFIG,\n    useValue: { ...defaultConfig, ...config }\n  };\n}\n\n/**\n * Sets up TranslocoConfig object.\n *\n * @param config The partial config object to load, this is optional,\n * will be spread after defaultConfig.\n */\nexport function translocoConfig(config: Partial<TranslocoConfig> = defaultConfig): TranslocoConfig {\n  return { ...defaultConfig, ...config };\n}\n","import { Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\nimport { HashMap, Translation } from './types';\nimport { getValue, isDefined, isObject, isString, setValue } from './helpers';\nimport { defaultConfig, TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\n\nexport const TRANSLOCO_TRANSPILER = new InjectionToken('TRANSLOCO_TRANSPILER');\n\nexport interface TranslocoTranspiler {\n  transpile(value: any, params: HashMap, translation: HashMap): any;\n\n  onLangChanged?(lang: string): void;\n}\n\nexport class DefaultTranspiler implements TranslocoTranspiler {\n  protected interpolationMatcher: RegExp;\n\n  constructor(@Optional() @Inject(TRANSLOCO_CONFIG) userConfig?: TranslocoConfig) {\n    this.interpolationMatcher = resolveMatcher(userConfig);\n  }\n\n  transpile(value: any, params: HashMap = {}, translation: Translation): any {\n    if (isString(value)) {\n      return value.replace(this.interpolationMatcher, (_, match) => {\n        match = match.trim();\n        if (isDefined(params[match])) {\n          return params[match];\n        }\n\n        return isDefined(translation[match]) ? this.transpile(translation[match], params, translation) : '';\n      });\n    } else if (params) {\n      if (isObject(value)) {\n        value = this.handleObject(value, params, translation);\n      } else if (Array.isArray(value)) {\n        value = this.handleArray(value, params, translation);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   *\n   * @example\n   *\n   * const en = {\n   *  a: {\n   *    b: {\n   *      c: \"Hello {{ value }}\"\n   *    }\n   *  }\n   * }\n   *\n   * const params =  {\n   *  \"b.c\": { value: \"Transloco \"}\n   * }\n   *\n   * service.selectTranslate('a', params);\n   *\n   * // the first param will be the result of `en.a`.\n   * // the second param will be `params`.\n   * parser.transpile(value, params, {});\n   *\n   *\n   */\n  protected handleObject(value: any, params: HashMap = {}, translation: Translation) {\n    let result = value;\n\n    Object.keys(params).forEach(p => {\n      // get the value of \"b.c\" inside \"a\" => \"Hello {{ value }}\"\n      const v = getValue(result, p);\n      // get the params of \"b.c\" => { value: \"Transloco\" }\n      const getParams = getValue(params, p);\n\n      // transpile the value => \"Hello Transloco\"\n      const transpiled = this.transpile(v, getParams, translation);\n\n      // set \"b.c\" to `transpiled`\n      result = setValue(result, p, transpiled);\n    });\n\n    return result;\n  }\n\n  protected handleArray(value: string[], params: HashMap = {}, translation: Translation) {\n    return value.map(v => this.transpile(v, params, translation));\n  }\n}\n\nfunction resolveMatcher(userConfig?: TranslocoConfig): RegExp {\n  const [start, end] = userConfig && userConfig.interpolation ? userConfig.interpolation : defaultConfig.interpolation;\n\n  return new RegExp(`${start}(.*?)${end}`, 'g');\n}\n\nexport interface TranslocoTranspilerFunction {\n  transpile(...args: string[]): any;\n}\n\nexport function getFunctionArgs(argsString: string): string[] {\n  const splitted = argsString ? argsString.split(',') : [];\n  const args = [];\n  for (let i = 0; i < splitted.length; i++) {\n    let value = splitted[i].trim();\n    while (value[value.length - 1] === '\\\\') {\n      i++;\n      value = value.replace('\\\\', ',') + splitted[i];\n    }\n    args.push(value);\n  }\n\n  return args;\n}\n\n@Injectable()\nexport class FunctionalTranspiler extends DefaultTranspiler implements TranslocoTranspiler {\n  constructor(private injector: Injector) {\n    super();\n  }\n\n  transpile(value: any, params: HashMap = {}, translation: Translation): any {\n    let transpiled = value;\n    if (isString(value)) {\n      transpiled = value.replace(/\\[\\[\\s*(\\w+)\\((.*)\\)\\s*]]/g, (match: string, functionName: string, args: string) => {\n        try {\n          const func: TranslocoTranspilerFunction = this.injector.get(functionName);\n\n          return func.transpile(...getFunctionArgs(args));\n        } catch (e) {\n          let message = `There is an error in: '${value}'. \n                          Check that the you used the right syntax in your translation and that the implementation of ${functionName} is correct.`;\n          if (e.message.includes('NullInjectorError')) {\n            message = `You are using the '${functionName}' function in your translation but no provider was found!`;\n          }\n          throw new Error(message);\n        }\n      });\n    }\n\n    return super.transpile(transpiled, params, translation);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { TranslocoConfig } from './transloco.config';\nimport { HashMap } from './types';\n\nexport const TRANSLOCO_MISSING_HANDLER = new InjectionToken('TRANSLOCO_MISSING_HANDLER');\n\nexport interface TranslocoMissingHandlerData extends TranslocoConfig {\n  activeLang: string;\n}\n\nexport interface TranslocoMissingHandler {\n  handle(key: string, data: TranslocoMissingHandlerData, params?: HashMap): any;\n}\n\nexport class DefaultHandler implements TranslocoMissingHandler {\n  handle(key: string, config: TranslocoConfig) {\n    if (config.missingHandler.logMissingKey && !config.prodMode) {\n      const msg = `Missing translation for '${key}'`;\n      console.warn(`%c ${msg}`, 'font-size: 12px; color: red');\n    }\n\n    return key;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Translation } from './types';\n\nexport const TRANSLOCO_INTERCEPTOR = new InjectionToken('TRANSLOCO_INTERCEPTOR');\n\nexport interface TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation;\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string;\n}\n\nexport class DefaultInterceptor implements TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation {\n    return translation;\n  }\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string {\n    return value;\n  }\n}\n","import { Inject, InjectionToken } from '@angular/core';\nimport { TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\n\nexport const TRANSLOCO_FALLBACK_STRATEGY = new InjectionToken<TranslocoFallbackStrategy>('TRANSLOCO_FALLBACK_STRATEGY');\n\nexport interface TranslocoFallbackStrategy {\n  getNextLangs(failedLang: string): string[];\n}\n\nexport class DefaultFallbackStrategy implements TranslocoFallbackStrategy {\n  constructor(@Inject(TRANSLOCO_CONFIG) private userConfig: TranslocoConfig) {}\n\n  getNextLangs(failedLang: string) {\n    const fallbackLang = this.userConfig.fallbackLang;\n    if (!fallbackLang) {\n      throw new Error('When using the default fallback, a fallback language must be provided in the config!');\n    }\n\n    return Array.isArray(fallbackLang) ? fallbackLang : [fallbackLang];\n  }\n}\n","import { TranslocoConfig } from './transloco.config';\n\nexport function mergeConfig(defaultConfig: TranslocoConfig, userConfig: Partial<TranslocoConfig>) {\n  return {\n    ...defaultConfig,\n    ...userConfig,\n    missingHandler: {\n      ...defaultConfig.missingHandler,\n      ...userConfig.missingHandler\n    },\n    flatten: {\n      ...defaultConfig.flatten,\n      ...userConfig.flatten\n    }\n  };\n}\n","import { TranslocoService } from './transloco.service';\nimport { hasInlineLoader, isString } from './helpers';\nimport { take } from 'rxjs/operators';\nimport { InlineLoader, TranslocoScope } from './types';\n\n/*\n * @example\n *\n * given: lazy-page/en => lazy-page\n *\n */\nexport function getScopeFromLang(lang: string): string {\n  if (!lang) {\n    return '';\n  }\n  const split = lang.split('/');\n  split.pop();\n  return split.join('/');\n}\n\n/*\n * @example\n *\n * given: lazy-page/en => en\n *\n */\nexport function getLangFromScope(lang: string): string {\n  if (!lang) {\n    return '';\n  }\n  const split = lang.split('/');\n  return split.pop();\n}\n\n/**\n * @example\n *\n * getPipeValue('todos|scoped', 'scoped') [true, 'todos']\n * getPipeValue('en|static', 'static') [true, 'en']\n * getPipeValue('en', 'static') [false, 'en']\n */\nexport function getPipeValue(str: string, value: string, char = '|'): [boolean, string] {\n  if (isString(str)) {\n    const splitted = str.split(char);\n    const lastItem = splitted.pop();\n    return lastItem === value ? [true, splitted.toString()] : [false, lastItem];\n  }\n\n  return [false, ''];\n}\n\nexport function shouldListenToLangChanges(service: TranslocoService, lang: string) {\n  const [hasStatic] = getPipeValue(lang, 'static');\n  if (hasStatic === false) {\n    // If we didn't get 'lang|static' check if it's set in the global level\n    return service.config.reRenderOnLangChange;\n  }\n\n  // We have 'lang|static' so don't listen to lang changes\n  return false;\n}\n\nexport function listenOrNotOperator(listenToLangChange: boolean) {\n  return listenToLangChange ? source => source : take(1);\n}\n\nfunction prependScope(inlineLoader, scope) {\n  return Object.keys(inlineLoader).reduce((acc, lang) => {\n    acc[`${scope}/${lang}`] = inlineLoader[lang];\n    return acc;\n  }, {});\n}\n\nexport function resolveInlineLoader(providerScope: TranslocoScope | null, scope: string): InlineLoader | null {\n  return hasInlineLoader(providerScope) ? prependScope(providerScope.loader, scope) : null;\n}\n\nexport function getEventPayload(lang: string) {\n  return {\n    scope: getScopeFromLang(lang) || null,\n    langName: getLangFromScope(lang),\n    lang\n  };\n}\n","import { TranslocoLoader, TranslocoLoaderData } from './transloco.loader';\nimport { InlineLoader } from './types';\nimport { isFunction } from './helpers';\n\nexport function resolveLoader(\n  path: string,\n  mainLoader: TranslocoLoader,\n  inlineLoader: InlineLoader,\n  data: TranslocoLoaderData\n) {\n  if (inlineLoader) {\n    const pathLoader = inlineLoader[path];\n    if (isFunction(pathLoader) === false) {\n      throw `You're using an inline loader but didn't provide a loader for ${path}`;\n    }\n\n    return inlineLoader[path]().then(res => (res.default ? res.default : res));\n  }\n\n  return mainLoader.getTranslation(path, data);\n}\n","import { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { resolveLoader } from './resolve-loader';\nimport { TranslocoLoader, TranslocoLoaderData } from './transloco.loader';\nimport { InlineLoader } from './types';\n\nexport function getFallbacksLoaders(\n  mainPath: string,\n  fallbackPath: string,\n  mainLoader: TranslocoLoader,\n  inlineLoader: InlineLoader,\n  data: TranslocoLoaderData\n) {\n  return [mainPath, fallbackPath].map(path => {\n    const loader = resolveLoader(path, mainLoader, inlineLoader, data);\n\n    return from(loader).pipe(\n      map(translation => ({\n        translation,\n        lang: path\n      }))\n    );\n  });\n}\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { BehaviorSubject, combineLatest, EMPTY, forkJoin, from, Observable, of, Subject, Subscription } from 'rxjs';\nimport { catchError, map, retry, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { DefaultLoader, TRANSLOCO_LOADER, TranslocoLoader } from './transloco.loader';\nimport { TRANSLOCO_TRANSPILER, TranslocoTranspiler } from './transloco.transpiler';\nimport {\n  AvailableLangs,\n  HashMap,\n  InlineLoader,\n  LoadOptions,\n  ProviderScope,\n  SetTranslationOptions,\n  TranslateObjectParams,\n  TranslateParams,\n  Translation,\n  TranslocoEvents,\n  TranslocoScope\n} from './types';\nimport { flatten, isEmpty, isNil, isScopeObject, isString, size, toCamelCase, unflatten } from './helpers';\nimport { defaultConfig, TRANSLOCO_CONFIG, TranslocoConfig } from './transloco.config';\nimport {\n  TRANSLOCO_MISSING_HANDLER,\n  TranslocoMissingHandler,\n  TranslocoMissingHandlerData\n} from './transloco-missing-handler';\nimport { TRANSLOCO_INTERCEPTOR, TranslocoInterceptor } from './transloco.interceptor';\nimport { TRANSLOCO_FALLBACK_STRATEGY, TranslocoFallbackStrategy } from './transloco-fallback-strategy';\nimport { mergeConfig } from './merge-config';\nimport { getEventPayload, getLangFromScope, getScopeFromLang, resolveInlineLoader } from './shared';\nimport { getFallbacksLoaders } from './get-fallbacks-loaders';\nimport { resolveLoader } from './resolve-loader';\n\nlet service: TranslocoService;\n\nexport function translate<T = any>(key: TranslateParams, params: HashMap = {}, lang?: string): T {\n  return service.translate(key, params, lang);\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoService implements OnDestroy {\n  private subscription: Subscription;\n  private translations = new Map<string, Translation>();\n  private cache = new Map<string, Observable<Translation>>();\n  private firstFallbackLang: string | null = null;\n  private defaultLang: string;\n  private mergedConfig: TranslocoConfig;\n  private availableLangs: AvailableLangs = [];\n  private isResolvedMissingOnce = false;\n  private lang: BehaviorSubject<string>;\n  langChanges$: Observable<string>;\n\n  private events = new Subject<TranslocoEvents>();\n  events$ = this.events.asObservable();\n\n  private failedLangs = new Set<string>();\n\n  constructor(\n    @Optional() @Inject(TRANSLOCO_LOADER) private loader: TranslocoLoader,\n    @Inject(TRANSLOCO_TRANSPILER) private parser: TranslocoTranspiler,\n    @Inject(TRANSLOCO_MISSING_HANDLER) private missingHandler: TranslocoMissingHandler,\n    @Inject(TRANSLOCO_INTERCEPTOR) private interceptor: TranslocoInterceptor,\n    @Inject(TRANSLOCO_CONFIG) private userConfig: TranslocoConfig,\n    @Inject(TRANSLOCO_FALLBACK_STRATEGY) private fallbackStrategy: TranslocoFallbackStrategy\n  ) {\n    if (!this.loader) {\n      this.loader = new DefaultLoader(this.translations);\n    }\n    service = this;\n    this.mergedConfig = mergeConfig(defaultConfig, userConfig);\n\n    this.setAvailableLangs(this.mergedConfig.availableLangs);\n    this.setFallbackLangForMissingTranslation(this.mergedConfig);\n    this.setDefaultLang(this.mergedConfig.defaultLang);\n    this.lang = new BehaviorSubject<string>(this.getDefaultLang());\n    // Don't use distinctUntilChanged as we need the ability to update\n    // the value when using setTranslation or setTranslationKeys\n    this.langChanges$ = this.lang.asObservable();\n\n    /**\n     * When we have a failure, we want to define the next language that succeeded as the active\n     */\n    this.subscription = this.events$.subscribe(e => {\n      if (e.type === 'translationLoadSuccess' && e.wasFailure) {\n        // Handle scoped lang\n        const lang = getLangFromScope(e.payload.lang);\n        this.setActiveLang(lang);\n      }\n    });\n  }\n\n  get config(): TranslocoConfig {\n    return this.mergedConfig;\n  }\n\n  getDefaultLang() {\n    return this.defaultLang;\n  }\n\n  setDefaultLang(lang: string) {\n    this.defaultLang = lang;\n  }\n\n  getActiveLang() {\n    return this.lang.getValue();\n  }\n\n  setActiveLang(lang: string) {\n    this.lang.next(lang);\n    this.parser.onLangChanged && this.parser.onLangChanged(lang);\n    return this;\n  }\n\n  setAvailableLangs(langs: AvailableLangs) {\n    this.availableLangs = langs;\n  }\n\n  /**\n   * Gets the available languages.\n   *\n   * @returns\n   * An array of the available languages. Can be either a `string[]` or a `{ id: string; label: string }[]`\n   * depending on how the available languages are set in your module.\n   */\n  getAvailableLangs() {\n    return this.availableLangs;\n  }\n\n  load(path: string, options: LoadOptions = {}): Observable<Translation> {\n    if (this.cache.has(path) === false) {\n      let loadTranslation: Observable<Translation | { translation: Translation; lang: string }[]>;\n      const isScope = this._isLangScoped(path);\n      const scope = isScope ? getScopeFromLang(path) : null;\n      if (this.useFallbackTranslation(path)) {\n        // if the path is scope the fallback should be `scope/fallbackLang`;\n        const fallback = isScope ? `${scope}/${this.firstFallbackLang}` : this.firstFallbackLang;\n\n        const loaders = getFallbacksLoaders(path, fallback, this.loader, options.inlineLoader, { scope });\n        loadTranslation = forkJoin(loaders);\n      } else {\n        const loader = resolveLoader(path, this.loader, options.inlineLoader, { scope });\n        loadTranslation = from(loader);\n      }\n\n      const load$ = loadTranslation.pipe(\n        retry(this.config.failedRetries),\n        tap(translation => {\n          if (Array.isArray(translation)) {\n            translation.forEach(t => {\n              this.handleSuccess(t.lang, t.translation);\n              // Save the fallback in cache so we'll not create a redundant request\n              if (t.lang !== path) {\n                this.cache.set(t.lang, of({}));\n              }\n            });\n            return;\n          }\n          this.handleSuccess(path, translation);\n        }),\n        catchError(() => this.handleFailure(path, options)),\n        shareReplay(1)\n      );\n\n      this.cache.set(path, load$);\n    }\n\n    return this.cache.get(path);\n  }\n\n  /**\n   * Gets the instant translated value of a key\n   *\n   * @example\n   *\n   * translate<string>('hello')\n   * translate('hello', { value: 'value' })\n   * translate<string[]>(['hello', 'key'])\n   * translate('hello', { }, 'en')\n   * translate('scope.someKey', { }, 'en')\n   */\n  translate<T = any>(key: TranslateParams, params: HashMap = {}, lang = this.getActiveLang()): T {\n    if (!key) return key as any;\n\n    const { scope, resolveLang } = this.resolveLangAndScope(lang);\n\n    if (Array.isArray(key)) {\n      return key.map(k => this.translate(scope ? `${scope}.${k}` : k, params, resolveLang)) as any;\n    }\n\n    key = scope ? `${scope}.${key}` : key;\n\n    const translation = this.getTranslation(resolveLang);\n    const value = translation[key];\n\n    if (!value) {\n      return this._handleMissingKey(key, value, params);\n    }\n\n    return this.parser.transpile(value, params, translation);\n  }\n\n  /**\n   * Gets the translated value of a key as observable\n   *\n   * @example\n   *\n   * selectTranslate<string>('hello').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, 'es').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, 'todos').subscribe(value => ...)\n   * selectTranslate<string>('hello', {}, { scope: 'todos' }).subscribe(value => ...)\n   *\n   */\n  selectTranslate<T = any>(\n    key: TranslateParams,\n    params?: HashMap,\n    lang?: string | TranslocoScope,\n    _isObject = false\n  ): Observable<T> {\n    let inlineLoader = null;\n    const load = (lang, options?: LoadOptions) =>\n      this.load(lang, options).pipe(\n        map(() => (_isObject ? this.translateObject(key, params, lang) : this.translate(key, params, lang)))\n      );\n    if (isNil(lang)) {\n      return this.langChanges$.pipe(switchMap(lang => load(lang)));\n    }\n\n    if (isScopeObject(lang)) {\n      // it's a scope object.\n      const providerScope = lang as ProviderScope;\n      lang = providerScope.scope;\n      inlineLoader = resolveInlineLoader(providerScope, providerScope.scope);\n    }\n\n    lang = lang as string;\n    if (this.isLang(lang) || this.isScopeWithLang(lang)) {\n      return load(lang);\n    }\n    // it's a scope\n    const scope = lang;\n    return this.langChanges$.pipe(switchMap(lang => load(`${scope}/${lang}`, { inlineLoader })));\n  }\n\n  /**\n   * Whether the scope with lang\n   *\n   * @example\n   *\n   * todos/en => true\n   * todos => false\n   */\n  private isScopeWithLang(lang: string) {\n    return this.isLang(getLangFromScope(lang));\n  }\n\n  /**\n   * Translate the given path that returns an object\n   *\n   * @example\n   *\n   * service.translateObject('path.to.object', {'subpath': { value: 'someValue'}}) => returns translated object\n   *\n   */\n  translateObject<T = any>(key: string, params?: HashMap, lang?: string): T;\n  translateObject<T = any>(key: string[], params?: HashMap, lang?: string): T[];\n  translateObject<T = any>(key: TranslateParams, params?: HashMap, lang?: string): T | T[];\n  translateObject<T = any>(key: HashMap | Map<string, HashMap>, params?: null, lang?: string): T[];\n  translateObject<T = any>(key: TranslateObjectParams, params?: HashMap, lang = this.getActiveLang()): T | T[] {\n    if (isString(key) || Array.isArray(key)) {\n      if (Array.isArray(key)) {\n        return key.map(k => this.translateObject(scope ? `${scope}.${k}` : k, params, resolveLang)) as any;\n      }\n      const { resolveLang, scope } = this.resolveLangAndScope(lang);\n\n      const translation = this.getTranslation(resolveLang);\n      key = scope ? `${scope}.${key}` : key;\n\n      const value = unflatten(this.getObjectByKey(translation, key));\n      /* If an empty object was returned we want to try and translate the key as a string and not an object */\n      return isEmpty(value) ? this.translate(key, params, lang) : this.parser.transpile(value, params, translation);\n    }\n\n    const translations: T[] = [];\n    for (const [_key, _params] of this.getEntries(key)) {\n      translations.push(this.translateObject(_key, _params, lang));\n    }\n\n    return translations;\n  }\n\n  selectTranslateObject<T = any>(key: string, params?: HashMap, lang?: string): Observable<T>;\n  selectTranslateObject<T = any>(key: string[], params?: HashMap, lang?: string): Observable<T[]>;\n  selectTranslateObject<T = any>(key: HashMap | Map<string, HashMap>, params?: null, lang?: string): Observable<T[]>;\n  selectTranslateObject<T = any>(\n    key: TranslateObjectParams,\n    params?: HashMap,\n    lang?: string\n  ): Observable<T> | Observable<T[]> {\n    if (isString(key) || Array.isArray(key)) {\n      return this.selectTranslate<T>(key, params, lang, true);\n    }\n\n    const [[firstKey, firstParams], ...rest] = this.getEntries(key);\n\n    /* In order to avoid subscribing multiple times to the load language event by calling selectTranslateObject for each pair,\n     * we listen to when the first key has been translated (the language is loaded) and translate the rest synchronously */\n    return this.selectTranslateObject<T>(firstKey, firstParams, lang).pipe(\n      map(value => {\n        const translations = [value];\n        for (const [_key, _params] of rest) {\n          translations.push(this.translateObject<T>(_key, _params, lang));\n        }\n\n        return translations;\n      })\n    );\n  }\n\n  /**\n   * Gets an object of translations for a given language\n   *\n   * @example\n   *\n   * getTranslation()\n   * getTranslation('en')\n   * getTranslation('admin-page/en')\n   */\n  getTranslation(): Map<string, Translation>;\n  getTranslation(langOrScope: string): Translation;\n  getTranslation(langOrScope?: string): Map<string, Translation> | Translation {\n    if (langOrScope) {\n      if (this.isLang(langOrScope)) {\n        return this.translations.get(langOrScope) || {};\n      } else {\n        // This is a scope, build the scope value from the translation object\n        const { scope, resolveLang } = this.resolveLangAndScope(langOrScope);\n        const translation = this.translations.get(resolveLang) || {};\n\n        return this.getObjectByKey(translation, scope);\n      }\n    }\n\n    return this.translations;\n  }\n\n  /**\n   * Gets an object of translations for a given language\n   *\n   * @example\n   *\n   * selectTranslation().subscribe() - will return the current lang translation\n   * selectTranslation('es').subscribe()\n   * selectTranslation('admin-page').subscribe() - will return the current lang scope translation\n   * selectTranslation('admin-page/es').subscribe()\n   */\n  selectTranslation(lang?: string): Observable<Translation> {\n    let language$ = this.langChanges$;\n    if (lang) {\n      const scopeLangSpecified = getLangFromScope(lang) !== lang;\n      if (this.isLang(lang) || scopeLangSpecified) {\n        language$ = of(lang);\n      } else {\n        language$ = this.langChanges$.pipe(map(currentLang => `${lang}/${currentLang}`));\n      }\n    }\n\n    return language$.pipe(switchMap(language => this.load(language).pipe(map(() => this.getTranslation(language)))));\n  }\n\n  /**\n   * Sets or merge a given translation object to current lang\n   *\n   * @example\n   *\n   * setTranslation({ ... })\n   * setTranslation({ ... }, 'en')\n   * setTranslation({ ... }, 'es', { merge: false } )\n   * setTranslation({ ... }, 'todos/en', { merge: false } )\n   */\n  setTranslation(translation: Translation, lang = this.getActiveLang(), options: SetTranslationOptions = {}) {\n    const defaults = { merge: true, emitChange: true };\n    const mergedOptions = { ...defaults, ...options };\n    const scope = getScopeFromLang(lang);\n\n    /**\n     * If this isn't a scope we use the whole translation as is\n     * otherwise we need to flat the scope and use it\n     */\n    let flattenScopeOrTranslation = translation;\n\n    // Merged the scoped language into the active language\n    if (scope) {\n      const key = this.getMappedScope(scope);\n      flattenScopeOrTranslation = flatten({ [key]: translation });\n    }\n\n    const currentLang = scope ? getLangFromScope(lang) : lang;\n\n    const mergedTranslation = {\n      ...(mergedOptions.merge && this.getTranslation(currentLang)),\n      ...flattenScopeOrTranslation\n    };\n\n    const flattenTranslation = this.mergedConfig.flatten.aot ? mergedTranslation : flatten(mergedTranslation);\n    const withHook = this.interceptor.preSaveTranslation(flattenTranslation, currentLang);\n    this.translations.set(currentLang, withHook);\n    mergedOptions.emitChange && this.setActiveLang(this.getActiveLang());\n  }\n\n  /**\n   * Sets translation key with given value\n   *\n   * @example\n   *\n   * setTranslationKey('key', 'value')\n   * setTranslationKey('key.nested', 'value')\n   * setTranslationKey('key.nested', 'value', 'en')\n   */\n  setTranslationKey(key: string, value: string, lang = this.getActiveLang()) {\n    const withHook = this.interceptor.preSaveTranslationKey(key, value, lang);\n    const newValue = {\n      ...this.getTranslation(lang),\n      [key]: withHook\n    };\n\n    this.setTranslation(newValue, lang);\n  }\n\n  /**\n   * Sets the fallback lang for the currently active language\n   * @param fallbackLang\n   */\n  setFallbackLangForMissingTranslation({ fallbackLang }: Pick<TranslocoConfig, 'fallbackLang'>): void {\n    const lang = Array.isArray(fallbackLang) ? fallbackLang[0] : fallbackLang;\n    if (this.useFallbackTranslation(lang) && fallbackLang) {\n      this.firstFallbackLang = lang;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _handleMissingKey(key: string, value: any, params?: HashMap) {\n    if (this.config.missingHandler.allowEmpty && value === '') {\n      return '';\n    }\n\n    if (this.useFallbackTranslation() && !this.isResolvedMissingOnce) {\n      // We need to set it to true to prevent a loop\n      this.isResolvedMissingOnce = true;\n      const fallbackValue = this.translate(key, params, this.firstFallbackLang);\n      this.isResolvedMissingOnce = false;\n      return fallbackValue;\n    }\n\n    return this.missingHandler.handle(key, this.getMissingHandlerData(), params);\n  }\n\n  /**\n   * @internal\n   */\n  _isLangScoped(lang: string) {\n    return this.getAvailableLangsIds().indexOf(lang) === -1;\n  }\n\n  /**\n   * Checks if a given string is one of the specified available languages.\n   * @returns\n   * True if the given string is an available language.\n   * False if the given string is not an available language.\n   */\n  isLang(lang: string): boolean {\n    return this.getAvailableLangsIds().indexOf(lang) !== -1;\n  }\n\n  /**\n   * @internal\n   *\n   * We always want to make sure the global lang is loaded\n   * before loading the scope since you can access both via the pipe/directive.\n   */\n  _loadDependencies(path: string, inlineLoader?: InlineLoader): Observable<Translation | Translation[]> {\n    const mainLang = getLangFromScope(path);\n\n    if (this._isLangScoped(path) && !this.isLoadedTranslation(mainLang)) {\n      return combineLatest(this.load(mainLang), this.load(path, { inlineLoader }));\n    }\n    return this.load(path, { inlineLoader });\n  }\n\n  /**\n   * @internal\n   */\n  _completeScopeWithLang(langOrScope: string) {\n    if (this._isLangScoped(langOrScope) && !this.isLang(getLangFromScope(langOrScope))) {\n      return `${langOrScope}/${this.getActiveLang()}`;\n    }\n    return langOrScope;\n  }\n\n  /**\n   * @internal\n   */\n  _setScopeAlias(scope: string, alias: string) {\n    if (!this.mergedConfig.scopeMapping) {\n      this.mergedConfig.scopeMapping = {};\n    }\n    this.mergedConfig.scopeMapping[scope] = alias;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  private isLoadedTranslation(lang: string) {\n    return size(this.getTranslation(lang));\n  }\n\n  private getAvailableLangsIds(): string[] {\n    const first = this.getAvailableLangs()[0];\n\n    if (isString(first)) {\n      return this.getAvailableLangs() as string[];\n    }\n\n    return (this.getAvailableLangs() as { id: string }[]).map(l => l.id);\n  }\n\n  private getMissingHandlerData(): TranslocoMissingHandlerData {\n    return {\n      ...this.config,\n      activeLang: this.getActiveLang(),\n      availableLangs: this.availableLangs,\n      defaultLang: this.defaultLang\n    };\n  }\n\n  /**\n   * Use a fallback translation set for missing keys of the primary language\n   * This is unrelated to the fallback language (which changes the active language)\n   */\n  private useFallbackTranslation(lang?: string) {\n    return this.config.missingHandler.useFallbackTranslation && lang !== this.firstFallbackLang;\n  }\n\n  private handleSuccess(lang: string, translation: Translation) {\n    this.setTranslation(translation, lang, { emitChange: false });\n    this.events.next({\n      wasFailure: !!this.failedLangs.size,\n      type: 'translationLoadSuccess',\n      payload: getEventPayload(lang)\n    });\n    this.failedLangs.forEach(l => this.cache.delete(l));\n    this.failedLangs.clear();\n  }\n\n  private handleFailure(lang: string, loadOptions: LoadOptions) {\n    // When starting to load a first choice language, initialize\n    // the failed counter and resolve the fallback langs.\n    if (isNil(loadOptions.failedCounter)) {\n      loadOptions.failedCounter = 0;\n\n      if (!loadOptions.fallbackLangs) {\n        loadOptions.fallbackLangs = this.fallbackStrategy.getNextLangs(lang);\n      }\n    }\n\n    const splitted = lang.split('/');\n    const fallbacks = loadOptions.fallbackLangs;\n    const nextLang = fallbacks[loadOptions.failedCounter];\n    this.failedLangs.add(lang);\n\n    // This handles the case where a loaded fallback language is requested again\n    if (this.cache.has(nextLang)) {\n      this.handleSuccess(nextLang, this.getTranslation(nextLang));\n      return EMPTY;\n    }\n\n    const isFallbackLang = nextLang === splitted[splitted.length - 1];\n\n    if (!nextLang || isFallbackLang) {\n      let msg = `Unable to load translation and all the fallback languages`;\n      if (splitted.length > 1) {\n        msg += `, did you misspelled the scope name?`;\n      }\n\n      throw new Error(msg);\n    }\n\n    let resolveLang = nextLang;\n    // if it's scoped lang\n    if (splitted.length > 1) {\n      // We need to resolve it to:\n      // todos/langNotExists => todos/nextLang\n      splitted[splitted.length - 1] = nextLang;\n      resolveLang = splitted.join('/');\n    }\n\n    loadOptions.failedCounter++;\n    this.events.next({\n      type: 'translationLoadFailure',\n      payload: getEventPayload(lang)\n    });\n\n    return this.load(resolveLang, loadOptions);\n  }\n\n  private getMappedScope(scope: string): string {\n    const { scopeMapping = {} } = this.config;\n    return scopeMapping[scope] || toCamelCase(scope);\n  }\n\n  /**\n   * If lang is scope we need to check the following cases:\n   * todos/es => in this case we should take `es` as lang\n   * todos => in this case we should set the active lang as lang\n   */\n  private resolveLangAndScope(lang: string) {\n    let resolveLang = lang;\n    let scope;\n\n    if (this._isLangScoped(lang)) {\n      // en for example\n      const langFromScope = getLangFromScope(lang);\n      // en is lang\n      const hasLang = this.isLang(langFromScope);\n      // take en\n      resolveLang = hasLang ? langFromScope : this.getActiveLang();\n      // find the scope\n      scope = this.getMappedScope(hasLang ? getScopeFromLang(lang) : lang);\n    }\n    return { scope, resolveLang };\n  }\n\n  private getObjectByKey(translation: Translation, key: string) {\n    const result = {};\n    const prefix = `${key}.`;\n\n    for (const currentKey in translation) {\n      if (currentKey.startsWith(prefix)) {\n        result[currentKey.replace(prefix, '')] = translation[currentKey];\n      }\n    }\n\n    return result;\n  }\n\n  private getEntries(key: HashMap | Map<string, HashMap>) {\n    return key instanceof Map ? key.entries() : Object.entries(key);\n  }\n}\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"transloco-loader-template\" [innerHTML]=\"html\"></div>\r\n  `\r\n})\r\nexport class TranslocoLoaderComponent {\r\n  @Input() html: string;\r\n}\r\n","import { ComponentRef, TemplateRef, ViewContainerRef, ComponentFactoryResolver, Injector, Type } from '@angular/core';\r\nimport { isString } from './helpers';\r\nimport { TranslocoLoaderComponent } from './loader-component.component';\r\n\r\nexport type View = string | TemplateRef<any> | Type<any>;\r\n\r\nexport class TemplateHandler {\r\n  private injector: Injector;\r\n\r\n  constructor(private view: View, private vcr: ViewContainerRef) {\r\n    this.injector = this.vcr.injector;\r\n  }\r\n\r\n  attachView() {\r\n    if (this.view instanceof TemplateRef) {\r\n      this.vcr.createEmbeddedView(this.view);\r\n    } else if (isString(this.view)) {\r\n      const componentRef = this.createComponent<TranslocoLoaderComponent>(TranslocoLoaderComponent);\r\n      componentRef.instance.html = this.view;\r\n      componentRef.hostView.detectChanges();\r\n    } else {\r\n      this.createComponent(this.view);\r\n    }\r\n  }\r\n\r\n  detachView() {\r\n    this.vcr.clear();\r\n  }\r\n\r\n  private createComponent<T>(cmp: Type<any>): ComponentRef<T> {\r\n    const cfr = this.injector.get(ComponentFactoryResolver);\r\n    const factory = cfr.resolveComponentFactory(cmp);\r\n\r\n    return this.vcr.createComponent(factory);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const TRANSLOCO_LANG = new InjectionToken<string>('TRANSLOCO_LANG');\n","import { InjectionToken, ComponentRef } from '@angular/core';\n\nexport const TRANSLOCO_LOADING_TEMPLATE = new InjectionToken<{ component: ComponentRef<any> | string }>(\n  'TRANSLOCO_LOADING_TEMPLATE'\n);\n","import { InjectionToken } from '@angular/core';\nimport { TranslocoScope } from './types';\n\nexport const TRANSLOCO_SCOPE = new InjectionToken<TranslocoScope>('TRANSLOCO_SCOPE');\n","import { getLangFromScope, getPipeValue, getScopeFromLang } from './shared';\n\ntype LangResolverParams = {\n  inline: string | undefined;\n  provider: string | undefined;\n  active: string | undefined;\n};\n\nexport class LangResolver {\n  initialized = false;\n\n  // inline => provider => active\n  resolve(\n    { inline, provider, active }: LangResolverParams = { inline: undefined, provider: undefined, active: undefined }\n  ) {\n    let lang = active;\n    /**\n     * When the user changes the lang we need to update\n     * the view. Otherwise, the lang will remain the inline/provided lang\n     */\n    if (this.initialized) {\n      lang = active;\n      return lang;\n    }\n\n    if (provider) {\n      const [_, extracted] = getPipeValue(provider, 'static');\n      lang = extracted;\n    }\n\n    if (inline) {\n      const [_, extracted] = getPipeValue(inline, 'static');\n      lang = extracted;\n    }\n\n    this.initialized = true;\n    return lang;\n  }\n\n  /**\n   *\n   * Resolve the lang\n   *\n   * @example\n   *\n   * resolveLangBasedOnScope('todos/en') => en\n   * resolveLangBasedOnScope('en') => en\n   *\n   */\n  resolveLangBasedOnScope(lang: string) {\n    const scope = getScopeFromLang(lang);\n    return scope ? getLangFromScope(lang) : lang;\n  }\n\n  /**\n   *\n   * Resolve the lang path for loading\n   *\n   * @example\n   *\n   * resolveLangPath('todos', 'en') => todos/en\n   * resolveLangPath('en') => en\n   *\n   */\n  resolveLangPath(lang: string, scope: string | undefined) {\n    return scope ? `${scope}/${lang}` : lang;\n  }\n}\n","import { TranslocoScope, ProviderScope, MaybeArray } from './types';\nimport { TranslocoService } from './transloco.service';\nimport { isScopeObject, toCamelCase } from './helpers';\n\ntype ScopeResolverParams = {\n  inline: string | undefined;\n  provider: MaybeArray<TranslocoScope>;\n};\n\nexport class ScopeResolver {\n  constructor(private translocoService: TranslocoService) {}\n\n  // inline => provider\n  resolve({ inline, provider }: ScopeResolverParams = { inline: undefined, provider: undefined }): string {\n    if (inline) {\n      return inline;\n    }\n\n    if (provider) {\n      if (isScopeObject(provider)) {\n        const { scope, alias = toCamelCase(scope) } = provider as ProviderScope;\n        this.translocoService._setScopeAlias(scope, alias);\n        return scope;\n      }\n\n      return provider as string;\n    }\n\n    return undefined;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { TemplateHandler, View } from './template-handler';\nimport { TRANSLOCO_LANG } from './transloco-lang';\nimport { TRANSLOCO_LOADING_TEMPLATE } from './transloco-loading-template';\nimport { TRANSLOCO_SCOPE } from './transloco-scope';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, MaybeArray, Translation, TranslocoScope } from './types';\nimport { listenOrNotOperator, resolveInlineLoader, shouldListenToLangChanges } from './shared';\nimport { LangResolver } from './lang-resolver';\nimport { ScopeResolver } from './scope-resolver';\n\n@Directive({\n  selector: '[transloco]'\n})\nexport class TranslocoDirective implements OnInit, OnDestroy, OnChanges {\n  subscription: Subscription | null;\n  view: EmbeddedViewRef<any>;\n  private translationMemo: { [key: string]: { value: any; params: HashMap } } = {};\n\n  @Input('transloco') key: string;\n  @Input('translocoParams') params: HashMap = {};\n  @Input('translocoScope') inlineScope: string | undefined;\n  @Input('translocoRead') inlineRead: string | undefined;\n  @Input('translocoLang') inlineLang: string | undefined;\n  @Input('translocoLoadingTpl') inlineTpl: TemplateRef<any> | undefined;\n\n  private currentLang: string;\n  private loaderTplHandler: TemplateHandler = null;\n  // Whether we already rendered the view once\n  private initialized = false;\n  private path: string;\n  private langResolver = new LangResolver();\n  private scopeResolver = new ScopeResolver(this.translocoService);\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Optional() private tpl: TemplateRef<{ $implicit: (key: string, params?: HashMap) => any }>,\n    @Optional() @Inject(TRANSLOCO_SCOPE) private providerScope: MaybeArray<TranslocoScope>,\n    @Optional() @Inject(TRANSLOCO_LANG) private providerLang: string | null,\n    @Optional() @Inject(TRANSLOCO_LOADING_TEMPLATE) private providedLoadingTpl: Type<any> | string,\n    private vcr: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private host: ElementRef\n  ) {}\n\n  ngOnInit() {\n    const listenToLangChange = shouldListenToLangChanges(this.translocoService, this.providerLang || this.inlineLang);\n\n    this.subscription = this.translocoService.langChanges$\n      .pipe(\n        switchMap(activeLang => {\n          const lang = this.langResolver.resolve({\n            inline: this.inlineLang,\n            provider: this.providerLang,\n            active: activeLang\n          });\n\n          return Array.isArray(this.providerScope)\n            ? forkJoin(\n                (<TranslocoScope[]>this.providerScope).map(providerScope => this.resolveScope(lang, providerScope))\n              )\n            : this.resolveScope(lang, this.providerScope);\n        }),\n        listenOrNotOperator(listenToLangChange)\n      )\n      .subscribe(() => {\n        this.currentLang = this.langResolver.resolveLangBasedOnScope(this.path);\n        this.tpl === null ? this.simpleStrategy() : this.structuralStrategy(this.currentLang, this.inlineRead);\n        this.cdr.markForCheck();\n        this.initialized = true;\n      });\n\n    const loadingTpl = this.getLoadingTpl();\n    if (!this.initialized && loadingTpl) {\n      this.loaderTplHandler = new TemplateHandler(loadingTpl, this.vcr);\n      this.loaderTplHandler.attachView();\n    }\n  }\n\n  ngOnChanges(changes) {\n    // We need to support dynamic keys/params, so if this is not the first change CD cycle\n    // we need to run the function again in order to update the value\n    const notInit = Object.keys(changes).some(v => changes[v].firstChange === false);\n    notInit && this.simpleStrategy();\n  }\n\n  private simpleStrategy() {\n    this.detachLoader();\n    this.host.nativeElement.innerText = this.translocoService.translate(this.key, this.params, this.currentLang);\n  }\n\n  private structuralStrategy(lang: string, read: string | undefined) {\n    this.translationMemo = {};\n\n    if (this.view) {\n      // when the lang changes we need to change the reference so Angular will update the view\n      this.view.context['$implicit'] = this.getTranslateFn(lang, read);\n    } else {\n      this.detachLoader();\n      this.view = this.vcr.createEmbeddedView(this.tpl, {\n        $implicit: this.getTranslateFn(lang, read)\n      });\n    }\n  }\n\n  private getTranslateFn(lang: string, read: string | undefined): (key: string, params?: HashMap) => any {\n    return (key: string, params: HashMap) => {\n      const withRead = read ? `${read}.${key}` : key;\n      const withParams = params ? `${withRead}${JSON.stringify(params)}` : withRead;\n      if (this.translationMemo.hasOwnProperty(withParams)) {\n        return this.translationMemo[withParams].value;\n      }\n      this.translationMemo[withParams] = {\n        params,\n        value: this.translocoService.translate(withRead, params, lang)\n      };\n\n      return this.translationMemo[withParams].value;\n    };\n  }\n\n  private getLoadingTpl(): View {\n    return this.inlineTpl || this.providedLoadingTpl;\n  }\n\n  ngOnDestroy() {\n    this.subscription && this.subscription.unsubscribe();\n  }\n\n  private detachLoader() {\n    this.loaderTplHandler && this.loaderTplHandler.detachView();\n  }\n\n  private resolveScope(lang: string, providerScope: TranslocoScope): Observable<Translation | Translation[]> {\n    let resolvedScope = this.scopeResolver.resolve({ inline: this.inlineScope, provider: providerScope });\n    this.path = this.langResolver.resolveLangPath(lang, resolvedScope);\n    const inlineLoader = resolveInlineLoader(providerScope, resolvedScope);\n    return this.translocoService._loadDependencies(this.path, inlineLoader);\n  }\n}\n","import { ChangeDetectorRef, Inject, OnDestroy, Optional, Pipe, PipeTransform } from '@angular/core';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, MaybeArray, Translation, TranslocoScope } from './types';\nimport { switchMap } from 'rxjs/operators';\nimport { forkJoin, Observable, Subscription } from 'rxjs';\nimport { TRANSLOCO_SCOPE } from './transloco-scope';\nimport { TRANSLOCO_LANG } from './transloco-lang';\nimport { listenOrNotOperator, resolveInlineLoader, shouldListenToLangChanges } from './shared';\nimport { LangResolver } from './lang-resolver';\nimport { ScopeResolver } from './scope-resolver';\n\n@Pipe({\n  name: 'transloco',\n  pure: false\n})\nexport class TranslocoPipe implements PipeTransform, OnDestroy {\n  private subscription: Subscription | null = null;\n  private lastValue: string = '';\n  private lastKey: string | undefined;\n  private listenToLangChange: boolean;\n  private path: string;\n  private langResolver = new LangResolver();\n  private scopeResolver = new ScopeResolver(this.translocoService);\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Optional() @Inject(TRANSLOCO_SCOPE) private providerScope: MaybeArray<TranslocoScope>,\n    @Optional() @Inject(TRANSLOCO_LANG) private providerLang: string | null,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.listenToLangChange = shouldListenToLangChanges(this.translocoService, this.providerLang);\n  }\n\n  // null is for handling strict mode + async pipe types https://github.com/ngneat/transloco/issues/311\n  transform(key: string | null, params?: HashMap | undefined, inlineLang?: string | undefined): string {\n    if (!key) {\n      return key;\n    }\n\n    const keyName = params ? `${key}${JSON.stringify(params)}` : key;\n\n    if (keyName === this.lastKey) {\n      return this.lastValue;\n    }\n\n    this.lastKey = keyName;\n    this.subscription && this.subscription.unsubscribe();\n\n    this.subscription = this.translocoService.langChanges$\n      .pipe(\n        switchMap(activeLang => {\n          const lang = this.langResolver.resolve({\n            inline: inlineLang,\n            provider: this.providerLang,\n            active: activeLang\n          });\n\n          return Array.isArray(this.providerScope)\n            ? forkJoin(\n                (<TranslocoScope[]>this.providerScope).map(providerScope => this.resolveScope(lang, providerScope))\n              )\n            : this.resolveScope(lang, this.providerScope);\n        }),\n        listenOrNotOperator(this.listenToLangChange)\n      )\n      .subscribe(() => this.updateValue(key, params));\n\n    return this.lastValue;\n  }\n\n  ngOnDestroy() {\n    this.subscription && this.subscription.unsubscribe();\n  }\n\n  private updateValue(key: string, params?: HashMap | undefined) {\n    const lang = this.langResolver.resolveLangBasedOnScope(this.path);\n    this.lastValue = this.translocoService.translate(key, params, lang);\n    this.cdr.markForCheck();\n  }\n\n  private resolveScope(lang: string, providerScope: TranslocoScope): Observable<Translation | Translation[]> {\n    let resolvedScope = this.scopeResolver.resolve({ inline: undefined, provider: providerScope });\n    this.path = this.langResolver.resolveLangPath(lang, resolvedScope);\n    const inlineLoader = resolveInlineLoader(providerScope, resolvedScope);\n    return this.translocoService._loadDependencies(this.path, inlineLoader);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TranslocoLoaderComponent } from './loader-component.component';\nimport { TranslocoDirective } from './transloco.directive';\nimport { DefaultTranspiler, TRANSLOCO_TRANSPILER } from './transloco.transpiler';\nimport { TranslocoPipe } from './transloco.pipe';\nimport { DefaultHandler, TRANSLOCO_MISSING_HANDLER } from './transloco-missing-handler';\nimport { DefaultInterceptor, TRANSLOCO_INTERCEPTOR } from './transloco.interceptor';\nimport { DefaultFallbackStrategy, TRANSLOCO_FALLBACK_STRATEGY } from './transloco-fallback-strategy';\nimport { TRANSLOCO_CONFIG } from './transloco.config';\n\nexport const defaultProviders = [\n  {\n    provide: TRANSLOCO_TRANSPILER,\n    useClass: DefaultTranspiler,\n    deps: [TRANSLOCO_CONFIG]\n  },\n  {\n    provide: TRANSLOCO_MISSING_HANDLER,\n    useClass: DefaultHandler\n  },\n  {\n    provide: TRANSLOCO_INTERCEPTOR,\n    useClass: DefaultInterceptor\n  },\n  {\n    provide: TRANSLOCO_FALLBACK_STRATEGY,\n    useClass: DefaultFallbackStrategy,\n    deps: [TRANSLOCO_CONFIG]\n  }\n];\n\n@NgModule({\n  declarations: [TranslocoDirective, TranslocoPipe, TranslocoLoaderComponent],\n  providers: [defaultProviders],\n  exports: [TranslocoDirective, TranslocoPipe],\n  entryComponents: [TranslocoLoaderComponent]\n})\nexport class TranslocoModule {}\n","import { APP_INITIALIZER, Inject, Injectable, InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { TRANSLOCO_LOADER, TranslocoLoader } from './transloco.loader';\nimport { HashMap, Translation } from './types';\nimport { Observable, of } from 'rxjs';\nimport { defaultProviders, TranslocoModule } from './transloco.module';\nimport { TRANSLOCO_CONFIG, TranslocoConfig, translocoConfig } from './transloco.config';\nimport { TranslocoService } from './transloco.service';\n\nexport interface TranslocoTestingOptions {\n  translocoConfig?: Partial<TranslocoConfig>;\n  preloadLangs?: boolean;\n  langs?: HashMap<Translation>;\n}\n\nconst TRANSLOCO_TEST_LANGS = new InjectionToken<HashMap<Translation>>(\n  'TRANSLOCO_TEST_LANGS - Available testing languages'\n);\nconst TRANSLOCO_TEST_OPTIONS = new InjectionToken<TranslocoTestingOptions>('TRANSLOCO_TEST_OPTIONS - Testing options');\n\n@Injectable()\nexport class TestingLoader implements TranslocoLoader {\n  constructor(@Inject(TRANSLOCO_TEST_LANGS) private langs: HashMap<Translation>) {}\n\n  getTranslation(lang: string): Observable<Translation> | Promise<Translation> {\n    return of(this.langs[lang]);\n  }\n}\n\nexport function initTranslocoService(\n  service: TranslocoService,\n  langs: HashMap<Translation> = {},\n  options: TranslocoTestingOptions\n) {\n  const preloadAllLangs = () =>\n    options.preloadLangs\n      ? Promise.all(Object.keys(langs).map(lang => service.load(lang).toPromise()))\n      : Promise.resolve();\n\n  return preloadAllLangs;\n}\n\n@NgModule({\n  exports: [TranslocoModule]\n})\nexport class TranslocoTestingModule {\n  static forRoot(options: TranslocoTestingOptions) {\n    return {\n      ngModule: TranslocoTestingModule,\n      providers: [\n        {\n          provide: TRANSLOCO_TEST_LANGS,\n          useValue: options.langs\n        },\n        {\n          provide: TRANSLOCO_TEST_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initTranslocoService,\n          deps: [TranslocoService, TRANSLOCO_TEST_LANGS, TRANSLOCO_TEST_OPTIONS],\n          multi: true\n        },\n        {\n          provide: TRANSLOCO_LOADER,\n          useClass: TestingLoader\n        },\n        defaultProviders,\n        {\n          provide: TRANSLOCO_CONFIG,\n          useValue: translocoConfig({\n            prodMode: true,\n            missingHandler: { logMissingKey: false },\n            ...options.translocoConfig\n          })\n        }\n      ]\n    };\n  }\n\n  /** @deprecated - use forRoot instead */\n  static withLangs(\n    langs: HashMap<Translation>,\n    config: Partial<TranslocoConfig> = {},\n    options: TranslocoTestingOptions = {}\n  ): ModuleWithProviders<TranslocoTestingModule> {\n    return {\n      ngModule: TranslocoTestingModule,\n      providers: [\n        {\n          provide: TRANSLOCO_TEST_LANGS,\n          useValue: langs\n        },\n        {\n          provide: TRANSLOCO_TEST_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initTranslocoService,\n          deps: [TranslocoService, TRANSLOCO_TEST_LANGS, TRANSLOCO_TEST_OPTIONS],\n          multi: true\n        },\n        {\n          provide: TRANSLOCO_LOADER,\n          useClass: TestingLoader\n        },\n        defaultProviders,\n        {\n          provide: TRANSLOCO_CONFIG,\n          useValue: translocoConfig({\n            prodMode: true,\n            missingHandler: { logMissingKey: false },\n            ...config\n          })\n        }\n      ]\n    };\n  }\n}\n","import { isBrowser } from './helpers';\n\n/**\n * Returns the language code name from the browser, e.g. \"en\"\n */\nexport function getBrowserLang(): string | undefined {\n  let browserLang = getBrowserCultureLang();\n  if (isBrowser() === false || !browserLang) {\n    return undefined;\n  }\n\n  if (browserLang.indexOf('-') !== -1) {\n    browserLang = browserLang.split('-')[0];\n  }\n\n  if (browserLang.indexOf('_') !== -1) {\n    browserLang = browserLang.split('_')[0];\n  }\n\n  return browserLang;\n}\n\n/**\n * Returns the culture language code name from the browser, e.g. \"en-US\"\n */\nexport function getBrowserCultureLang(): string {\n  if (isBrowser() === false) {\n    return undefined;\n  }\n\n  const navigator = window.navigator as any;\n  let browserCultureLang = navigator.languages ? navigator.languages[0] : null;\n  browserCultureLang = browserCultureLang || navigator.language || navigator.browserLanguage || navigator.userLanguage;\n\n  return browserCultureLang;\n}\n"]}