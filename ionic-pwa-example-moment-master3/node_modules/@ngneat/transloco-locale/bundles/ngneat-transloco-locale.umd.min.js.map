{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngneat/transloco-locale/lib/helpers.ts","ng://@ngneat/transloco-locale/lib/shared.ts","ng://@ngneat/transloco-locale/lib/locale-currency.ts","ng://@ngneat/transloco-locale/lib/transloco-locale.config.ts","ng://@ngneat/transloco-locale/lib/transloco-locale.transformers.ts","ng://@ngneat/transloco-locale/lib/transloco-locale.service.ts","ng://@ngneat/transloco-locale/lib/pipes/transloco-locale.pipe.ts","ng://@ngneat/transloco-locale/lib/pipes/transloco-currency.pipe.ts","ng://@ngneat/transloco-locale/lib/pipes/transloco-date.pipe.ts","ng://@ngneat/transloco-locale/lib/pipes/transloco-decimal.pipe.ts","ng://@ngneat/transloco-locale/lib/pipes/transloco-percent.pipe.ts","ng://@ngneat/transloco-locale/lib/transloco-locale.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import NumberFormatOptions = Intl.NumberFormatOptions;\r\nimport { toNumber } from '@ngneat/transloco';\r\nimport { Locale, DateFormatOptions } from './transloco-locale.types';\r\n\r\nexport const ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\r\n/**\r\n * check if a given value is in BCP 47 language tag.\r\n *\r\n * isLocaleFormat('en') // false,\r\n * isLocaleFormat('En-us') // false\r\n * isLocaleFormat('en-US') // true\r\n */\r\nexport function isLocaleFormat(val: string): val is Locale {\r\n  const irregulars = `en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE|art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang|zh-Hans|zh-hant`;\r\n  const BCPFormat = `[a-z]{2}-[A-Z]{2}`;\r\n  return typeof val === 'string' && !!val.match(RegExp(`(${irregulars})|(${BCPFormat})`));\r\n}\r\n\r\nexport function localizeNumber(value: number | string, locale: Locale, options: NumberFormatOptions): string {\r\n  const number = toNumber(value);\r\n  return number !== null ? new Intl.NumberFormat(locale, options).format(number) : '';\r\n}\r\n\r\nexport function localizeDate(date: Date, locale: Locale, options: DateFormatOptions): string {\r\n  if (isDate(date)) {\r\n    return new Intl.DateTimeFormat(locale, options).format(date);\r\n  }\r\n  return '';\r\n}\r\n\r\nexport function isDate(value): boolean {\r\n  return value instanceof Date && !isNaN(<any>value);\r\n}\r\n\r\nexport function toDate(value): Date {\r\n  let match: RegExpMatchArray | null;\r\n\r\n  if (typeof value === 'string') {\r\n    value = value.trim();\r\n  }\r\n\r\n  if (isDate(value)) {\r\n    return value;\r\n  }\r\n\r\n  if (!isNaN(value - parseFloat(value))) {\r\n    return new Date(parseFloat(value));\r\n  }\r\n\r\n  if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\r\n    const [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\r\n    return new Date(y, m - 1, d);\r\n  }\r\n\r\n  if (typeof value === 'string' && (match = value.match(ISO8601_DATE_REGEX))) {\r\n    return isoStringToDate(match);\r\n  }\r\n\r\n  return new Date(value);\r\n}\r\n\r\nexport function isoStringToDate(match: RegExpMatchArray): Date {\r\n  const date: Date = new Date(0);\r\n  let tzHour: number = 0;\r\n  let tzMin: number = 0;\r\n  const dateSetter: Function = match[8] ? date.setUTCFullYear : date.setFullYear;\r\n  const timeSetter: Function = match[8] ? date.setUTCHours : date.setHours;\r\n  if (match[9]) {\r\n    tzHour = +(match[9] + match[10]);\r\n    tzMin = +(match[9] + match[11]);\r\n  }\r\n  dateSetter.call(date, +match[1], +match[2] - 1, +match[3]);\r\n  const h: number = +(match[4] || '0') - tzHour;\r\n  const m: number = +(match[5] || '0') - tzMin;\r\n  const s: number = +(match[6] || '0');\r\n  const ms: number = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\r\n  timeSetter.call(date, h, m, s, ms);\r\n  return date;\r\n}\r\n","import { Locale } from './transloco-locale.types';\r\nimport { LocaleFormatOptions, LocaleConfig } from './transloco-locale.config';\r\n\r\nexport function getDefaultOptions(locale: Locale, type: keyof LocaleFormatOptions, localeConfig: LocaleConfig): any {\r\n  const defaultConfig = localeConfig.global ? localeConfig.global[type] : {};\r\n  const settings = localeConfig.localeBased ? localeConfig.localeBased[locale] : {};\r\n  return settings && settings[type] ? { ...defaultConfig, ...settings[type] } : defaultConfig;\r\n}\r\n","export default {\r\n  'aa-DJ': 'DJF',\r\n  'aa-ER': 'ERN',\r\n  'aa-ET': 'ETB',\r\n  'ab-GE': 'ETB',\r\n  'ab-TR': 'ETB',\r\n  'af-BW': 'ETB',\r\n  'af-NA': 'ETB',\r\n  'af-ZA': 'ZAR',\r\n  'ak-GH': 'ZAR',\r\n  'am-ET': 'ETB',\r\n  'am-IL': 'ETB',\r\n  'ar-AE': 'AED',\r\n  'ar-AR': 'AED',\r\n  'ar-BH': 'BHD',\r\n  'ar-CM': 'BHD',\r\n  'ar-CY': 'BHD',\r\n  'ar-DJ': 'BHD',\r\n  'ar-DZ': 'DZD',\r\n  'ar-EG': 'EGP',\r\n  'ar-EH': 'EGP',\r\n  'ar-ER': 'EGP',\r\n  'ar-IL': 'EGP',\r\n  'ar-IQ': 'IQD',\r\n  'ar-IR': 'IQD',\r\n  'ar-JO': 'JOD',\r\n  'ar-KE': 'JOD',\r\n  'ar-KM': 'JOD',\r\n  'ar-KW': 'KWD',\r\n  'ar-LB': 'LBP',\r\n  'ar-LY': 'LYD',\r\n  'ar-MA': 'MAD',\r\n  'ar-ML': 'MAD',\r\n  'ar-MR': 'MAD',\r\n  'ar-NE': 'MAD',\r\n  'ar-NG': 'MAD',\r\n  'ar-OM': 'OMR',\r\n  'ar-PS': 'OMR',\r\n  'ar-QA': 'QAR',\r\n  'ar-SA': 'SAR',\r\n  'ar-SD': 'SDD',\r\n  'ar-SS': 'SDD',\r\n  'ar-SY': 'SYP',\r\n  'ar-TD': 'SYP',\r\n  'ar-TJ': 'SYP',\r\n  'ar-TN': 'TND',\r\n  'ar-TR': 'TND',\r\n  'ar-YE': 'YER',\r\n  'as-IN': 'INR',\r\n  'av-RU': 'INR',\r\n  'ay-BO': 'INR',\r\n  'ay-PE': 'INR',\r\n  'az-AZ': 'AZM',\r\n  'ba-RU': 'AZM',\r\n  'be-BY': 'BYR',\r\n  'be-PL': 'BYR',\r\n  'be-UA': 'BYR',\r\n  'bg-BG': 'BGN',\r\n  'bg-GR': 'BGN',\r\n  'bg-MD': 'BGN',\r\n  'bg-RO': 'BGN',\r\n  'bg-TR': 'BGN',\r\n  'bg-UA': 'BGN',\r\n  'bi-VU': 'BGN',\r\n  'bm-ML': 'BGN',\r\n  'bn-BD': 'BDT',\r\n  'bn-GB': 'BDT',\r\n  'bn-IN': 'INR',\r\n  'bn-NP': 'INR',\r\n  'bo-CN': 'CNY',\r\n  'bo-IN': 'INR',\r\n  'bo-NP': 'INR',\r\n  'br-FR': 'EUR',\r\n  'bs-BA': 'BAM',\r\n  'ca-AD': 'EUR',\r\n  'ca-ES': 'EUR',\r\n  'ca-FR': 'EUR',\r\n  'ca-IT': 'EUR',\r\n  'ce-RU': 'EUR',\r\n  'ch-GU': 'EUR',\r\n  'ch-MP': 'EUR',\r\n  'co-FR': 'EUR',\r\n  'cs-CZ': 'CZK',\r\n  'cv-RU': 'RUB',\r\n  'cy-AR': 'RUB',\r\n  'cy-GB': 'GBP',\r\n  'da-DE': 'GBP',\r\n  'da-DK': 'DKK',\r\n  'da-GL': 'DKK',\r\n  'da-IS': 'DKK',\r\n  'de-AT': 'EUR',\r\n  'de-BE': 'EUR',\r\n  'de-BR': 'EUR',\r\n  'de-CA': 'EUR',\r\n  'de-CH': 'CHF',\r\n  'de-CZ': 'CHF',\r\n  'de-DE': 'EUR',\r\n  'de-DK': 'EUR',\r\n  'de-HU': 'EUR',\r\n  'de-IT': 'EUR',\r\n  'de-KZ': 'EUR',\r\n  'de-LI': 'EUR',\r\n  'de-LU': 'EUR',\r\n  'de-NA': 'EUR',\r\n  'de-PL': 'EUR',\r\n  'de-PY': 'EUR',\r\n  'de-RO': 'EUR',\r\n  'de-SK': 'EUR',\r\n  'de-US': 'EUR',\r\n  'dv-IN': 'EUR',\r\n  'dv-MV': 'MVR',\r\n  'dz-BT': 'BTN',\r\n  'dz-IN': 'BTN',\r\n  'ee-GH': 'BTN',\r\n  'ee-TG': 'BTN',\r\n  'el-AL': 'BTN',\r\n  'el-CY': 'EUR',\r\n  'el-DE': 'EUR',\r\n  'el-EG': 'EUR',\r\n  'el-GB': 'EUR',\r\n  'el-GR': 'EUR',\r\n  'el-IT': 'EUR',\r\n  'el-RO': 'EUR',\r\n  'el-TR': 'EUR',\r\n  'el-UA': 'EUR',\r\n  'en-AC': 'EUR',\r\n  'en-AG': 'XCD',\r\n  'en-AI': 'XCD',\r\n  'en-AS': 'XCD',\r\n  'en-AU': 'AUD',\r\n  'en-AW': 'AUD',\r\n  'en-BB': 'AUD',\r\n  'en-BE': 'AUD',\r\n  'en-BM': 'AUD',\r\n  'en-BN': 'AUD',\r\n  'en-BS': 'AUD',\r\n  'en-BW': 'BWP',\r\n  'en-BZ': 'BWP',\r\n  'en-CA': 'CAD',\r\n  'en-CC': 'CAD',\r\n  'en-CK': 'CAD',\r\n  'en-CM': 'CAD',\r\n  'en-CN': 'CAD',\r\n  'en-CX': 'CAD',\r\n  'en-DE': 'CAD',\r\n  'en-DG': 'CAD',\r\n  'en-DM': 'CAD',\r\n  'en-DO': 'CAD',\r\n  'en-ES': 'CAD',\r\n  'en-ET': 'CAD',\r\n  'en-FI': 'CAD',\r\n  'en-FJ': 'CAD',\r\n  'en-FK': 'CAD',\r\n  'en-FM': 'CAD',\r\n  'en-FR': 'CAD',\r\n  'en-GB': 'GBP',\r\n  'en-GD': 'GBP',\r\n  'en-GG': 'GBP',\r\n  'en-GH': 'GBP',\r\n  'en-GI': 'GBP',\r\n  'en-GM': 'GBP',\r\n  'en-GU': 'GBP',\r\n  'en-GY': 'GBP',\r\n  'en-HK': 'HKD',\r\n  'en-HN': 'HKD',\r\n  'en-IE': 'EUR',\r\n  'en-IL': 'EUR',\r\n  'en-IM': 'EUR',\r\n  'en-IN': 'INR',\r\n  'en-IO': 'INR',\r\n  'en-IT': 'INR',\r\n  'en-JE': 'INR',\r\n  'en-JM': 'INR',\r\n  'en-KE': 'INR',\r\n  'en-KI': 'INR',\r\n  'en-KN': 'INR',\r\n  'en-KY': 'INR',\r\n  'en-LB': 'INR',\r\n  'en-LC': 'INR',\r\n  'en-LK': 'INR',\r\n  'en-LR': 'INR',\r\n  'en-LS': 'INR',\r\n  'en-MG': 'INR',\r\n  'en-MH': 'INR',\r\n  'en-MP': 'INR',\r\n  'en-MS': 'INR',\r\n  'en-MT': 'INR',\r\n  'en-MU': 'INR',\r\n  'en-MW': 'INR',\r\n  'en-MY': 'INR',\r\n  'en-NA': 'INR',\r\n  'en-NF': 'INR',\r\n  'en-NG': 'NGN',\r\n  'en-NL': 'NGN',\r\n  'en-NR': 'NGN',\r\n  'en-NU': 'NGN',\r\n  'en-NZ': 'NZD',\r\n  'en-PA': 'NZD',\r\n  'en-PG': 'NZD',\r\n  'en-PH': 'PHP',\r\n  'en-PI': 'PHP',\r\n  'en-PK': 'PHP',\r\n  'en-PM': 'PHP',\r\n  'en-PN': 'PHP',\r\n  'en-PR': 'PHP',\r\n  'en-PW': 'PHP',\r\n  'en-RW': 'PHP',\r\n  'en-SB': 'PHP',\r\n  'en-SC': 'PHP',\r\n  'en-SG': 'SGD',\r\n  'en-SH': 'SGD',\r\n  'en-SL': 'SGD',\r\n  'en-SS': 'SGD',\r\n  'en-SZ': 'SGD',\r\n  'en-TA': 'SGD',\r\n  'en-TC': 'SGD',\r\n  'en-TK': 'SGD',\r\n  'en-TO': 'SGD',\r\n  'en-TT': 'SGD',\r\n  'en-TV': 'SGD',\r\n  'en-TZ': 'SGD',\r\n  'en-UD': 'SGD',\r\n  'en-UG': 'SGD',\r\n  'en-UM': 'SGD',\r\n  'en-US': 'USD',\r\n  'en-VC': 'USD',\r\n  'en-VG': 'USD',\r\n  'en-VI': 'USD',\r\n  'en-VU': 'USD',\r\n  'en-WS': 'USD',\r\n  'en-ZA': 'ZAR',\r\n  'en-ZM': 'ZAR',\r\n  'en-ZW': 'ZWD',\r\n  'eo-EO': 'ZWD',\r\n  'eo-SM': 'ZWD',\r\n  'es-AD': 'ZWD',\r\n  'es-AR': 'ARS',\r\n  'es-BO': 'BOB',\r\n  'es-BZ': 'BOB',\r\n  'es-CL': 'CLP',\r\n  'es-CO': 'COP',\r\n  'es-CR': 'CRC',\r\n  'es-CU': 'CRC',\r\n  'es-DE': 'CRC',\r\n  'es-DO': 'DOP',\r\n  'es-EA': 'DOP',\r\n  'es-EC': 'USD',\r\n  'es-ES': 'EUR',\r\n  'es-GQ': 'EUR',\r\n  'es-GT': 'GTQ',\r\n  'es-HN': 'HNL',\r\n  'es-IC': 'HNL',\r\n  'es-LA': 'HNL',\r\n  'es-MA': 'HNL',\r\n  'es-MX': 'MXN',\r\n  'es-NI': 'NIO',\r\n  'es-PA': 'PAB',\r\n  'es-PE': 'PEN',\r\n  'es-PH': 'PEN',\r\n  'es-PR': 'USD',\r\n  'es-PY': 'PYG',\r\n  'es-SV': 'SVC',\r\n  'es-TT': 'SVC',\r\n  'es-US': 'USD',\r\n  'es-UY': 'UYU',\r\n  'es-VE': 'VEB',\r\n  'et-EE': 'EEK',\r\n  'et-FI': 'EEK',\r\n  'eu-ES': 'EUR',\r\n  'eu-FR': 'EUR',\r\n  'fa-AE': 'EUR',\r\n  'fa-AF': 'EUR',\r\n  'fa-IQ': 'EUR',\r\n  'fa-IR': 'IRR',\r\n  'fa-OM': 'IRR',\r\n  'fa-PK': 'IRR',\r\n  'fa-QA': 'IRR',\r\n  'fa-TJ': 'IRR',\r\n  'fb-LT': 'IRR',\r\n  'ff-GN': 'IRR',\r\n  'ff-MR': 'IRR',\r\n  'ff-SN': 'IRR',\r\n  'fi-FI': 'EUR',\r\n  'fi-RU': 'EUR',\r\n  'fi-SE': 'EUR',\r\n  'fj-FJ': 'EUR',\r\n  'fo-FO': 'DKK',\r\n  'fr-AD': 'DKK',\r\n  'fr-BE': 'EUR',\r\n  'fr-BF': 'EUR',\r\n  'fr-BI': 'EUR',\r\n  'fr-BJ': 'EUR',\r\n  'fr-BL': 'EUR',\r\n  'fr-CA': 'CAD',\r\n  'fr-CD': 'CAD',\r\n  'fr-CF': 'CAD',\r\n  'fr-CG': 'CAD',\r\n  'fr-CH': 'CHF',\r\n  'fr-CI': 'CHF',\r\n  'fr-CM': 'CHF',\r\n  'fr-CP': 'CHF',\r\n  'fr-DJ': 'CHF',\r\n  'fr-DZ': 'CHF',\r\n  'fr-FR': 'EUR',\r\n  'fr-GA': 'EUR',\r\n  'fr-GB': 'EUR',\r\n  'fr-GF': 'EUR',\r\n  'fr-GN': 'EUR',\r\n  'fr-GP': 'EUR',\r\n  'fr-GQ': 'EUR',\r\n  'fr-HT': 'EUR',\r\n  'fr-IT': 'EUR',\r\n  'fr-KM': 'EUR',\r\n  'fr-LB': 'EUR',\r\n  'fr-LU': 'EUR',\r\n  'fr-MA': 'EUR',\r\n  'fr-MC': 'EUR',\r\n  'fr-MF': 'EUR',\r\n  'fr-MG': 'EUR',\r\n  'fr-ML': 'EUR',\r\n  'fr-MQ': 'EUR',\r\n  'fr-MR': 'EUR',\r\n  'fr-MU': 'EUR',\r\n  'fr-NC': 'EUR',\r\n  'fr-NE': 'EUR',\r\n  'fr-PF': 'EUR',\r\n  'fr-PM': 'EUR',\r\n  'fr-RE': 'EUR',\r\n  'fr-RW': 'EUR',\r\n  'fr-SC': 'EUR',\r\n  'fr-SN': 'EUR',\r\n  'fr-SY': 'EUR',\r\n  'fr-TD': 'EUR',\r\n  'fr-TF': 'EUR',\r\n  'fr-TG': 'EUR',\r\n  'fr-TN': 'EUR',\r\n  'fr-US': 'EUR',\r\n  'fr-VU': 'EUR',\r\n  'fr-WF': 'EUR',\r\n  'fr-YT': 'EUR',\r\n  'fy-NL': 'EUR',\r\n  'ga-GB': 'EUR',\r\n  'ga-IE': 'EUR',\r\n  'gd-GB': 'GBP',\r\n  'gl-ES': 'EUR',\r\n  'gl-PT': 'EUR',\r\n  'gn-AR': 'EUR',\r\n  'gn-BO': 'EUR',\r\n  'gn-PY': 'EUR',\r\n  'gu-IN': 'INR',\r\n  'gu-KE': 'INR',\r\n  'gv-IM': 'INR',\r\n  'he-IL': 'ILS',\r\n  'hi-FJ': 'ILS',\r\n  'hi-IN': 'INR',\r\n  'hi-NP': 'INR',\r\n  'hi-UG': 'INR',\r\n  'hi-ZA': 'INR',\r\n  'ho-PG': 'INR',\r\n  'hr-AT': 'INR',\r\n  'hr-BA': 'INR',\r\n  'hr-DE': 'INR',\r\n  'hr-HR': 'HRK',\r\n  'hr-HU': 'HRK',\r\n  'hr-IT': 'HRK',\r\n  'ht-HT': 'HTG',\r\n  'hu-AT': 'HTG',\r\n  'hu-HU': 'HUF',\r\n  'hu-IL': 'HUF',\r\n  'hu-RO': 'HUF',\r\n  'hu-RS': 'HUF',\r\n  'hu-SI': 'HUF',\r\n  'hu-SK': 'HUF',\r\n  'hu-UA': 'HUF',\r\n  'hy-AM': 'AMD',\r\n  'hy-CY': 'AMD',\r\n  'hy-GE': 'AMD',\r\n  'hy-IR': 'AMD',\r\n  'hy-LB': 'AMD',\r\n  'hy-SY': 'AMD',\r\n  'hy-TR': 'AMD',\r\n  'ia-SE': 'AMD',\r\n  'id-ID': 'IDR',\r\n  'id-NL': 'IDR',\r\n  'ig-NG': 'NGN',\r\n  'ii-CN': 'NGN',\r\n  'ik-US': 'NGN',\r\n  'is-IS': 'ISK',\r\n  'it-AU': 'ISK',\r\n  'it-BR': 'ISK',\r\n  'it-CA': 'ISK',\r\n  'it-CH': 'CHF',\r\n  'it-DE': 'CHF',\r\n  'it-FR': 'CHF',\r\n  'it-GB': 'CHF',\r\n  'it-HR': 'CHF',\r\n  'it-IT': 'EUR',\r\n  'it-SI': 'EUR',\r\n  'it-SM': 'EUR',\r\n  'it-US': 'EUR',\r\n  'it-VA': 'EUR',\r\n  'iu-GL': 'EUR',\r\n  'ja-BR': 'EUR',\r\n  'ja-JP': 'JPY',\r\n  'jv-ID': 'JPY',\r\n  'jv-MY': 'JPY',\r\n  'ka-GE': 'GEL',\r\n  'ka-IR': 'GEL',\r\n  'ka-TR': 'GEL',\r\n  'kg-CD': 'GEL',\r\n  'ki-KE': 'GEL',\r\n  'kj-NA': 'GEL',\r\n  'kl-DK': 'GEL',\r\n  'kl-GL': 'DKK',\r\n  'km-KH': 'KHR',\r\n  'kn-IN': 'INR',\r\n  'ko-BR': 'INR',\r\n  'ko-CN': 'INR',\r\n  'ko-JP': 'INR',\r\n  'ko-KP': 'INR',\r\n  'ko-KR': 'KRW',\r\n  'ko-US': 'KRW',\r\n  'ks-GB': 'KRW',\r\n  'ks-IN': 'INR',\r\n  'ks-PK': 'INR',\r\n  'ku-TR': 'TRY',\r\n  'kw-GB': 'GBP',\r\n  'la-VA': 'GBP',\r\n  'lb-LU': 'GBP',\r\n  'lg-UG': 'UGX',\r\n  'li-NL': 'EUR',\r\n  'ln-CD': 'EUR',\r\n  'ln-CG': 'EUR',\r\n  'lo-LA': 'LAK',\r\n  'lt-LT': 'LTL',\r\n  'lu-CD': 'LTL',\r\n  'lv-LV': 'LVL',\r\n  'mg-MG': 'MGA',\r\n  'mh-MH': 'MGA',\r\n  'mi-NZ': 'NZD',\r\n  'mk-AL': 'NZD',\r\n  'mk-GR': 'NZD',\r\n  'mk-MK': 'MKD',\r\n  'ml-AE': 'MKD',\r\n  'ml-BH': 'MKD',\r\n  'ml-GB': 'MKD',\r\n  'ml-IL': 'MKD',\r\n  'ml-IN': 'INR',\r\n  'ml-MY': 'INR',\r\n  'ml-QA': 'INR',\r\n  'ml-SG': 'INR',\r\n  'mr-IN': 'INR',\r\n  'ms-BN': 'INR',\r\n  'ms-CC': 'INR',\r\n  'ms-ID': 'INR',\r\n  'ms-MY': 'MYR',\r\n  'ms-SG': 'MYR',\r\n  'mt-MT': 'EUR',\r\n  'my-BD': 'EUR',\r\n  'my-MM': 'MMK',\r\n  'na-NR': 'MMK',\r\n  'nb-NO': 'NOK',\r\n  'nb-SJ': 'NOK',\r\n  'nd-ZW': 'NOK',\r\n  'ne-BT': 'NOK',\r\n  'ne-IN': 'NOK',\r\n  'ne-NP': 'INR',\r\n  'ng-NA': 'INR',\r\n  'nl-AW': 'AWG',\r\n  'nl-BE': 'EUR',\r\n  'nl-DE': 'EUR',\r\n  'nl-FR': 'EUR',\r\n  'nl-NL': 'EUR',\r\n  'nl-SR': 'EUR',\r\n  'nn-NO': 'NOK',\r\n  'nr-ZA': 'ZAR',\r\n  'nv-US': 'ZAR',\r\n  'ny-MW': 'ZAR',\r\n  'ny-MZ': 'ZAR',\r\n  'ny-ZM': 'ZAR',\r\n  'ny-ZW': 'ZAR',\r\n  'oc-FR': 'EUR',\r\n  'om-ET': 'ETB',\r\n  'om-KE': 'KES',\r\n  'om-SO': 'KES',\r\n  'or-IN': 'INR',\r\n  'os-GE': 'INR',\r\n  'pa-IN': 'INR',\r\n  'pl-CZ': 'INR',\r\n  'pl-DE': 'INR',\r\n  'pl-IL': 'INR',\r\n  'pl-PL': 'PLN',\r\n  'pl-RO': 'PLN',\r\n  'pl-SK': 'PLN',\r\n  'pl-UA': 'PLN',\r\n  'ps-AE': 'PLN',\r\n  'ps-AF': 'AFN',\r\n  'ps-IR': 'AFN',\r\n  'ps-PK': 'AFN',\r\n  'pt-AG': 'AFN',\r\n  'pt-AO': 'AFN',\r\n  'pt-BR': 'BRL',\r\n  'pt-CV': 'BRL',\r\n  'pt-FR': 'BRL',\r\n  'pt-GW': 'BRL',\r\n  'pt-MO': 'BRL',\r\n  'pt-MZ': 'BRL',\r\n  'pt-PT': 'EUR',\r\n  'pt-ST': 'EUR',\r\n  'pt-TL': 'EUR',\r\n  'qu-BO': 'EUR',\r\n  'qu-PE': 'EUR',\r\n  'rm-CH': 'EUR',\r\n  'rn-BI': 'EUR',\r\n  'ro-HU': 'EUR',\r\n  'ro-IL': 'EUR',\r\n  'ro-MD': 'EUR',\r\n  'ro-RO': 'RON',\r\n  'ro-RS': 'RON',\r\n  'ro-UA': 'RON',\r\n  'ru-BY': 'RON',\r\n  'ru-CN': 'RON',\r\n  'ru-DE': 'RON',\r\n  'ru-EE': 'RON',\r\n  'ru-FI': 'RON',\r\n  'ru-GE': 'RON',\r\n  'ru-IL': 'RON',\r\n  'ru-KG': 'RON',\r\n  'ru-KZ': 'RON',\r\n  'ru-LT': 'RON',\r\n  'ru-LV': 'RON',\r\n  'ru-MD': 'RON',\r\n  'ru-MN': 'RON',\r\n  'ru-RU': 'RUB',\r\n  'ru-SJ': 'RUB',\r\n  'ru-TM': 'RUB',\r\n  'ru-UA': 'UAH',\r\n  'ru-US': 'UAH',\r\n  'ru-UZ': 'UAH',\r\n  'rw-CD': 'UAH',\r\n  'rw-RW': 'RWF',\r\n  'rw-UG': 'RWF',\r\n  'sa-IN': 'INR',\r\n  'se-FI': 'INR',\r\n  'se-NO': 'NOK',\r\n  'se-SE': 'NOK',\r\n  'sg-CF': 'NOK',\r\n  'si-LK': 'LKR',\r\n  'sk-HU': 'LKR',\r\n  'sk-RS': 'LKR',\r\n  'sk-SK': 'EUR',\r\n  'sl-AT': 'EUR',\r\n  'sl-HU': 'EUR',\r\n  'sl-IT': 'EUR',\r\n  'sl-SI': 'EUR',\r\n  'sm-AS': 'EUR',\r\n  'sm-WS': 'EUR',\r\n  'sn-ZW': 'EUR',\r\n  'so-DJ': 'DJF',\r\n  'so-ET': 'ETB',\r\n  'so-KE': 'ETB',\r\n  'so-SO': 'SOS',\r\n  'sq-AL': 'ALL',\r\n  'sq-GR': 'ALL',\r\n  'sq-ME': 'ALL',\r\n  'sq-MK': 'MKD',\r\n  'sq-RS': 'MKD',\r\n  'sq-TR': 'MKD',\r\n  'sr-RS': 'RSD',\r\n  'ss-LS': 'RSD',\r\n  'ss-SZ': 'RSD',\r\n  'ss-ZA': 'ZAR',\r\n  'st-LS': 'ZAR',\r\n  'st-ZA': 'ZAR',\r\n  'su-ID': 'ZAR',\r\n  'sv-AX': 'ZAR',\r\n  'sv-FI': 'EUR',\r\n  'sv-SE': 'SEK',\r\n  'sw-BI': 'SEK',\r\n  'sw-CD': 'SEK',\r\n  'sw-KE': 'SEK',\r\n  'sw-MZ': 'SEK',\r\n  'sw-SO': 'SEK',\r\n  'sw-TZ': 'SEK',\r\n  'sw-UG': 'SEK',\r\n  'sw-YT': 'SEK',\r\n  'sw-ZA': 'SEK',\r\n  'ta-IN': 'INR',\r\n  'ta-LK': 'INR',\r\n  'ta-MU': 'INR',\r\n  'ta-MY': 'INR',\r\n  'ta-RE': 'INR',\r\n  'ta-SG': 'INR',\r\n  'te-IN': 'INR',\r\n  'th-TH': 'THB',\r\n  'ti-ER': 'ERN',\r\n  'ti-ET': 'ETB',\r\n  'ti-IL': 'ETB',\r\n  'tk-AF': 'ETB',\r\n  'tk-IR': 'ETB',\r\n  'tk-TM': 'TMM',\r\n  'tl-PH': 'PHP',\r\n  'tl-US': 'PHP',\r\n  'tn-BW': 'PHP',\r\n  'tn-NA': 'PHP',\r\n  'tn-ZA': 'ZAR',\r\n  'tn-ZW': 'ZAR',\r\n  'to-TO': 'ZAR',\r\n  'tr-BG': 'ZAR',\r\n  'tr-CY': 'TRY',\r\n  'tr-DE': 'TRY',\r\n  'tr-GR': 'TRY',\r\n  'tr-MK': 'TRY',\r\n  'tr-NL': 'TRY',\r\n  'tr-RO': 'TRY',\r\n  'tr-TR': 'TRY',\r\n  'tr-UA': 'TRY',\r\n  'tr-UZ': 'TRY',\r\n  'ts-MZ': 'TRY',\r\n  'ts-SZ': 'TRY',\r\n  'ts-ZA': 'ZAR',\r\n  'tt-RU': 'RUB',\r\n  'ty-PF': 'RUB',\r\n  'uk-PL': 'RUB',\r\n  'uk-SK': 'RUB',\r\n  'uk-UA': 'UAH',\r\n  'ur-IN': 'UAH',\r\n  'ur-MU': 'UAH',\r\n  'ur-PK': 'PKR',\r\n  've-ZA': 'ZAR',\r\n  've-ZW': 'ZAR',\r\n  'vi-CN': 'ZAR',\r\n  'vi-US': 'ZAR',\r\n  'vi-VN': 'VND',\r\n  'wa-BE': 'EUR',\r\n  'xh-LS': 'EUR',\r\n  'xh-ZA': 'ZAR',\r\n  'yi-UA': 'ZAR',\r\n  'yo-BJ': 'ZAR',\r\n  'yo-NG': 'NGN',\r\n  'za-CN': 'NGN',\r\n  'zh-CN': 'CNY',\r\n  'zh-HK': 'HKD',\r\n  'zh-TW': 'TWD',\r\n  'zu-LS': 'TWD',\r\n  'zu-MW': 'TWD',\r\n  'zu-MZ': 'TWD',\r\n  'zu-SZ': 'TWD',\r\n  'zu-ZA': 'ZAR'\r\n};\r\n","import { InjectionToken } from '@angular/core';\nimport { HashMap } from '@ngneat/transloco';\nimport LOCALE_CURRENCY from './locale-currency';\nimport { DateFormatOptions, NumberFormatOptions, Locale, Currency } from './transloco-locale.types';\n\nexport interface LocaleFormatOptions {\n  date?: DateFormatOptions;\n  decimal?: NumberFormatOptions;\n  currency?: NumberFormatOptions;\n  percent?: NumberFormatOptions;\n}\n\nexport interface LocaleConfig {\n  global?: LocaleFormatOptions;\n  localeBased?: HashMap<LocaleFormatOptions>;\n}\n\nexport interface TranslocoLocaleConfig {\n  defaultLocale?: Locale;\n  localeConfig?: LocaleConfig;\n  langToLocaleMapping?: HashMap<Locale>;\n  localeToCurrencyMapping?: HashMap<Currency>;\n}\n\nexport const defaultConfig: TranslocoLocaleConfig = {\n  localeConfig: {\n    global: {},\n    localeBased: {}\n  },\n  defaultLocale: 'en-US',\n  localeToCurrencyMapping: LOCALE_CURRENCY,\n  langToLocaleMapping: {}\n};\n\nexport const LOCALE_DEFAULT_LOCALE = new InjectionToken<NumberFormatOptions>('DEFAULT_LOCALE');\nexport const LOCALE_LANG_MAPPING = new InjectionToken<HashMap<Locale>>('LOCALE_LANG_MAPPING');\nexport const LOCALE_CONFIG = new InjectionToken<HashMap<LocaleFormatOptions>>('LOCALE_CONFIG');\nexport const LOCALE_CURRENCY_MAPPING = new InjectionToken<HashMap<Currency>>('LOCALE_CURRENCY_MAPPING');\n","import { InjectionToken } from '@angular/core';\nimport { localizeNumber, localizeDate } from './helpers';\nimport { Locale, DateFormatOptions, NumberTypes } from './transloco-locale.types';\n\nexport const TRANSLOCO_DATE_TRANSFORMER = new InjectionToken<TranslocoDateTransformer>('TRANSLOCO_DATE_TRANSFORMER');\nexport const TRANSLOCO_NUMBER_TRANSFORMER = new InjectionToken<TranslocoNumberTransformer>(\n  'TRANSLOCO_NUMBER_TRANSFORMER'\n);\n\nexport interface TranslocoDateTransformer {\n  transform(date: Date, locale: Locale, options: DateFormatOptions): string;\n}\nexport interface TranslocoNumberTransformer {\n  transform(value: number | string, type: NumberTypes, locale: Locale, options: Intl.NumberFormatOptions): string;\n}\n\nexport class DefaultDateTransformer implements TranslocoDateTransformer {\n  public transform(date: Date, locale: Locale, options: DateFormatOptions): string {\n    return localizeDate(date, locale, options);\n  }\n}\nexport class DefaultNumberTransformer implements TranslocoNumberTransformer {\n  public transform(\n    value: number | string,\n    type: NumberTypes,\n    locale: string,\n    options: Intl.NumberFormatOptions\n  ): string {\n    return localizeNumber(value, locale, { ...options, style: type });\n  }\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { TranslocoService, HashMap } from '@ngneat/transloco';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\nimport { map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { isLocaleFormat, toDate } from './helpers';\nimport { getDefaultOptions } from './shared';\nimport {\n  LOCALE_LANG_MAPPING,\n  LOCALE_DEFAULT_LOCALE,\n  LOCALE_CONFIG,\n  LocaleConfig,\n  LOCALE_CURRENCY_MAPPING\n} from './transloco-locale.config';\nimport {\n  TRANSLOCO_DATE_TRANSFORMER,\n  TRANSLOCO_NUMBER_TRANSFORMER,\n  TranslocoDateTransformer,\n  TranslocoNumberTransformer\n} from './transloco-locale.transformers';\nimport { Locale, DateFormatOptions, NumberTypes, Currency, ValidDate } from './transloco-locale.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslocoLocaleService implements OnDestroy {\n  localeChanges$: Observable<Locale>;\n  private locale: BehaviorSubject<Locale>;\n  private _locale: Locale | null;\n  private subscription: Subscription;\n\n  constructor(\n    private translocoService: TranslocoService,\n    @Inject(LOCALE_LANG_MAPPING) private langLocaleMapping: HashMap<Locale>,\n    @Inject(LOCALE_DEFAULT_LOCALE) private defaultLocale: Locale,\n    @Inject(LOCALE_CONFIG) private localeConfig: LocaleConfig,\n    @Inject(LOCALE_CURRENCY_MAPPING) private localeCurrencyMapping: HashMap<Currency>,\n    @Inject(TRANSLOCO_NUMBER_TRANSFORMER) private numberTransformer: TranslocoNumberTransformer,\n    @Inject(TRANSLOCO_DATE_TRANSFORMER) private dateTransformer: TranslocoDateTransformer\n  ) {\n    this._locale = defaultLocale || this.toLocale(this.translocoService.getActiveLang());\n    this.locale = new BehaviorSubject(this._locale);\n    this.localeChanges$ = this.locale.asObservable().pipe(distinctUntilChanged());\n\n    this.subscription = translocoService.langChanges$\n      .pipe(\n        map(this.toLocale.bind(this)),\n        filter(lang => !!lang)\n      )\n      .subscribe(this.setLocale.bind(this));\n  }\n\n  getLocale() {\n    return this._locale;\n  }\n\n  setLocale(locale: Locale) {\n    if (!isLocaleFormat(locale)) {\n      console.error(`${locale} isn't a valid locale format`);\n      return false;\n    }\n    this.locale.next(locale);\n    this._locale = locale;\n  }\n\n  /**\n   * Get the currency symbol for the currently set locale.\n   */\n  getCurrencySymbol(locale = this.getLocale()) {\n    const currency = this.localeCurrencyMapping[locale];\n    const numberFormat = new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currencyDisplay: 'symbol',\n      currency: currency,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    });\n\n    const pivot = 0;\n\n    return numberFormat\n      .format(pivot)\n      .split(pivot.toString())\n      .map(element => element.trim())\n      .find(element => !!element);\n  }\n\n  /**\n   * Transform a date into the locale's date format.\n   *\n   * The date expression: a `Date` object, a number\n   * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n   *\n   * @example\n   *\n   * localizeDate(new Date(2019, 9, 7, 12, 0, 0)) // 10/7/2019\n   * localizeDate(date, 'en-US', { dateStyle: 'medium', timeStyle: 'medium' }) // Sep 10, 2019, 10:46:12 PM\n   * localizeDate(date) 'en-US', { timeZone: 'UTC', timeStyle: 'full' } // 7:40:32 PM Coordinated Universal Time\n   * localizeDate(1, 'en-US', { dateStyle: 'medium' }) // Jan 1, 1970\n   * localizeDate('2019-02-08', 'en-US', { dateStyle: 'medium' }) // Feb 8, 2019\n   */\n  localizeDate(date: ValidDate, locale: Locale = this.getLocale(), options?: DateFormatOptions): string {\n    options = options ? options : getDefaultOptions(locale, 'date', this.localeConfig);\n    return this.dateTransformer.transform(toDate(date), locale, options);\n  }\n\n  /**\n   * Transform a number into the locale's number format according to the number type.\n   *\n   * localizeNumber(1234567890, 'decimal') // 1,234,567,890\n   * localizeNumber(0.5, 'percent') // 50%\n   * localizeNumber(1000, 'currency') // $1,000.00\n   */\n  localizeNumber(\n    value: number | string,\n    type: NumberTypes,\n    locale: Locale = this.getLocale(),\n    options?: Intl.NumberFormatOptions\n  ): string {\n    options = options ? options : getDefaultOptions(locale, type, this.localeConfig);\n    if (type === 'currency') {\n      options = { ...options, currency: options.currency || this._resolveCurrencyCode(locale) };\n    }\n    return this.numberTransformer.transform(value, type, locale, options);\n  }\n\n  /**\n   * @internal\n   */\n  _resolveCurrencyCode(locale: Locale = this.getLocale()) {\n    return this.localeCurrencyMapping[locale] || 'USD';\n  }\n\n  private toLocale(val: string | Locale): Locale | null {\n    if (isLocaleFormat(val)) {\n      return val;\n    }\n    if (this.langLocaleMapping[val]) {\n      return this.langLocaleMapping[val];\n    }\n\n    return null;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Locale } from '../../lib/transloco-locale.types';\nimport { TranslocoLocaleService } from '../transloco-locale.service';\n\nexport class TranslocoLocalePipe {\n  private subscription: Subscription;\n\n  constructor(protected translocoLocaleService: TranslocoLocaleService, protected cdr: ChangeDetectorRef) {\n    this.subscription = this.translocoLocaleService.localeChanges$.subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  protected getLocale(locale: Locale | undefined): Locale {\n    return locale || this.translocoLocaleService.getLocale();\n  }\n\n  onDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Pipe, PipeTransform, ChangeDetectorRef, Inject, OnDestroy } from '@angular/core';\nimport { isNil } from '@ngneat/transloco';\nimport { getDefaultOptions } from '../shared';\nimport { LOCALE_CONFIG, LocaleConfig } from '../transloco-locale.config';\nimport { TranslocoLocaleService } from '../transloco-locale.service';\nimport { NumberFormatOptions, Currency, Locale } from '../transloco-locale.types';\nimport { TranslocoLocalePipe } from './transloco-locale.pipe';\n\n@Pipe({\n  name: 'translocoCurrency',\n  pure: false\n})\nexport class TranslocoCurrencyPipe extends TranslocoLocalePipe implements PipeTransform, OnDestroy {\n  constructor(\n    protected translocoLocaleService: TranslocoLocaleService,\n    protected cdr: ChangeDetectorRef,\n    @Inject(LOCALE_CONFIG) private localeConfig: LocaleConfig\n  ) {\n    super(translocoLocaleService, cdr);\n  }\n\n  /**\n   * Transform a given number into the locale's currency format.\n   *\n   * @example\n   *\n   * 1000000 | translocoCurrency: 'symbol' : {} : USD // $1,000,000.00\n   * 1000000 | translocoCurrency: 'name' : {} : USD // 1,000,000.00 US dollars\n   * 1000000 | translocoCurrency: 'symbol' : {minimumFractionDigits: 0 } : USD // $1,000,000\n   *\n   */\n  transform(\n    value: number | string,\n    display: 'code' | 'symbol' | 'name' = 'symbol',\n    numberFormatOptions: NumberFormatOptions = {},\n    currencyCode?: Currency,\n    locale?: Locale\n  ): string {\n    if (isNil(value)) return '';\n    locale = this.getLocale(locale);\n\n    const options = {\n      ...getDefaultOptions(locale, 'currency', this.localeConfig),\n      ...numberFormatOptions,\n      currencyDisplay: display,\n      currency: currencyCode || this.translocoLocaleService._resolveCurrencyCode()\n    };\n    return this.translocoLocaleService.localizeNumber(value, 'currency', locale, options);\n  }\n\n  ngOnDestroy(): void {\n    super.onDestroy();\n  }\n}\n","import { Pipe, ChangeDetectorRef, PipeTransform, Inject, OnDestroy } from '@angular/core';\nimport { isNil } from '@ngneat/transloco';\nimport { getDefaultOptions } from '../shared';\nimport { LOCALE_CONFIG, LocaleConfig } from '../transloco-locale.config';\nimport { TranslocoLocaleService } from '../transloco-locale.service';\nimport { DateFormatOptions, Locale, ValidDate } from '../transloco-locale.types';\nimport { TranslocoLocalePipe } from './transloco-locale.pipe';\n\n@Pipe({\n  name: 'translocoDate',\n  pure: false\n})\nexport class TranslocoDatePipe extends TranslocoLocalePipe implements PipeTransform, OnDestroy {\n  constructor(\n    protected translocoLocaleService: TranslocoLocaleService,\n    protected cdr: ChangeDetectorRef,\n    @Inject(LOCALE_CONFIG) private localeConfig: LocaleConfig\n  ) {\n    super(translocoLocaleService, cdr);\n  }\n\n  /**\n   * Transform a date into the locale's date format.\n   *\n   * The date expression: a `Date` object,  a number\n   * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n   *\n   * @example\n   *\n   * date | translocoDate: {} : en-US // 9/10/2019\n   * date | translocoDate: { dateStyle: 'medium', timeStyle: 'medium' } : en-US // Sep 10, 2019, 10:46:12 PM\n   * date | translocoDate: { timeZone: 'UTC', timeStyle: 'full' } : en-US // 7:40:32 PM Coordinated Universal Time\n   * 1 | translocoDate: { dateStyle: 'medium' } // Jan 1, 1970\n   * '2019-02-08' | translocoDate: { dateStyle: 'medium' } // Feb 8, 2019\n   */\n  transform(date: ValidDate, options: DateFormatOptions = {}, locale?: Locale) {\n    if (isNil(date)) return '';\n    locale = this.getLocale(locale);\n\n    return this.translocoLocaleService.localizeDate(date, locale, {\n      ...getDefaultOptions(locale, 'date', this.localeConfig),\n      ...options\n    });\n  }\n\n  ngOnDestroy(): void {\n    super.onDestroy();\n  }\n}\n","import { Pipe, PipeTransform, ChangeDetectorRef, Inject, OnDestroy } from '@angular/core';\nimport { isNil } from '@ngneat/transloco';\nimport { getDefaultOptions } from '../shared';\nimport { LOCALE_CONFIG, LocaleConfig } from '../transloco-locale.config';\nimport { TranslocoLocaleService } from '../transloco-locale.service';\nimport { NumberFormatOptions, Locale } from '../transloco-locale.types';\nimport { TranslocoLocalePipe } from './transloco-locale.pipe';\n\n@Pipe({\n  name: 'translocoDecimal',\n  pure: false\n})\nexport class TranslocoDecimalPipe extends TranslocoLocalePipe implements PipeTransform, OnDestroy {\n  constructor(\n    protected translocoLocaleService: TranslocoLocaleService,\n    protected cdr: ChangeDetectorRef,\n    @Inject(LOCALE_CONFIG) private localeConfig: LocaleConfig\n  ) {\n    super(translocoLocaleService, cdr);\n  }\n\n  /**\n   * Transform a given number into the locale's currency format.\n   *\n   * @example\n   *\n   * 1234567890 | translocoDecimal: {} : en-US // 1,234,567,890\n   * 1234567890 | translocoDecimal: {useGrouping: false}: en-US // 1234567890\n   *\n   */\n  transform(value: string | number, numberFormatOptions: NumberFormatOptions = {}, locale?: Locale): string {\n    if (isNil(value)) return '';\n    locale = this.getLocale(locale);\n\n    const options = {\n      ...getDefaultOptions(locale, 'decimal', this.localeConfig),\n      ...numberFormatOptions\n    };\n    return this.translocoLocaleService.localizeNumber(value, 'decimal', locale, options);\n  }\n\n  ngOnDestroy(): void {\n    super.onDestroy();\n  }\n}\n","import { Pipe, PipeTransform, ChangeDetectorRef, Inject, OnDestroy } from '@angular/core';\nimport { isNil } from '@ngneat/transloco';\nimport { getDefaultOptions } from '../shared';\nimport { LOCALE_CONFIG, LocaleConfig } from '../transloco-locale.config';\nimport { TranslocoLocaleService } from '../transloco-locale.service';\nimport { NumberFormatOptions, Locale } from '../transloco-locale.types';\nimport { TranslocoLocalePipe } from './transloco-locale.pipe';\n\n@Pipe({\n  name: 'translocoPercent',\n  pure: false\n})\nexport class TranslocoPercentPipe extends TranslocoLocalePipe implements PipeTransform, OnDestroy {\n  constructor(\n    protected translocoLocaleService: TranslocoLocaleService,\n    protected cdr: ChangeDetectorRef,\n    @Inject(LOCALE_CONFIG) private localeConfig: LocaleConfig\n  ) {\n    super(translocoLocaleService, cdr);\n  }\n\n  /**\n   * Transform a given number into the locale's currency format.\n   *\n   * @example\n   *\n   * 1 | translocoPercent : {} : en-US // 100%\n   * \"1\" | translocoPercent : {} : en-US // 100%\n   *\n   */\n  transform(value: number | string, numberFormatOptions: NumberFormatOptions = {}, locale?: Locale): string {\n    if (isNil(value)) return '';\n    locale = this.getLocale(locale);\n\n    const options = {\n      ...getDefaultOptions(locale, 'percent', this.localeConfig),\n      ...numberFormatOptions\n    };\n    return this.translocoLocaleService.localizeNumber(value, 'percent', locale, options);\n  }\n\n  ngOnDestroy(): void {\n    super.onDestroy();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TranslocoCurrencyPipe } from './pipes/transloco-currency.pipe';\nimport { TranslocoDatePipe } from './pipes/transloco-date.pipe';\nimport { TranslocoDecimalPipe } from './pipes/transloco-decimal.pipe';\nimport { TranslocoPercentPipe } from './pipes/transloco-percent.pipe';\nimport {\n  TranslocoLocaleConfig,\n  LOCALE_CURRENCY_MAPPING,\n  LOCALE_LANG_MAPPING,\n  defaultConfig,\n  LOCALE_DEFAULT_LOCALE,\n  LOCALE_CONFIG\n} from './transloco-locale.config';\nimport {\n  TRANSLOCO_DATE_TRANSFORMER,\n  TRANSLOCO_NUMBER_TRANSFORMER,\n  DefaultDateTransformer,\n  DefaultNumberTransformer\n} from './transloco-locale.transformers';\n\nexport const pipes = [TranslocoCurrencyPipe, TranslocoDatePipe, TranslocoDecimalPipe, TranslocoPercentPipe];\n\n@NgModule({\n  declarations: pipes,\n  exports: pipes\n})\nexport class TranslocoLocaleModule {\n  static init(config: TranslocoLocaleConfig = {}): ModuleWithProviders<TranslocoLocaleModule> {\n    return {\n      ngModule: TranslocoLocaleModule,\n      providers: [\n        {\n          provide: LOCALE_LANG_MAPPING,\n          useValue: config.langToLocaleMapping || defaultConfig.langToLocaleMapping\n        },\n        {\n          provide: LOCALE_CONFIG,\n          useValue: config.localeConfig || defaultConfig.localeConfig\n        },\n        {\n          provide: LOCALE_CURRENCY_MAPPING,\n          useValue: config.localeToCurrencyMapping || defaultConfig.localeToCurrencyMapping\n        },\n        {\n          provide: LOCALE_DEFAULT_LOCALE,\n          useValue: config.defaultLocale || defaultConfig.defaultLocale\n        },\n        {\n          provide: TRANSLOCO_DATE_TRANSFORMER,\n          useClass: DefaultDateTransformer\n        },\n        {\n          provide: TRANSLOCO_NUMBER_TRANSFORMER,\n          useClass: DefaultNumberTransformer\n        }\n      ]\n    };\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","ISO8601_DATE_REGEX","isLocaleFormat","val","match","RegExp","isDate","value","Date","isNaN","toDate","trim","parseFloat","test","_a","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","error","split","map","y","isoStringToDate","date","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","h","ms","Math","round","getDefaultOptions","locale","type","localeConfig","defaultConfig","global","settings","localeBased","defaultLocale","localeToCurrencyMapping","aa-DJ","aa-ER","aa-ET","ab-GE","ab-TR","af-BW","af-NA","af-ZA","ak-GH","am-ET","am-IL","ar-AE","ar-AR","ar-BH","ar-CM","ar-CY","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-IR","ar-JO","ar-KE","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-ML","ar-MR","ar-NE","ar-NG","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SS","ar-SY","ar-TD","ar-TJ","ar-TN","ar-TR","ar-YE","as-IN","av-RU","ay-BO","ay-PE","az-AZ","ba-RU","be-BY","be-PL","be-UA","bg-BG","bg-GR","bg-MD","bg-RO","bg-TR","bg-UA","bi-VU","bm-ML","bn-BD","bn-GB","bn-IN","bn-NP","bo-CN","bo-IN","bo-NP","br-FR","bs-BA","ca-AD","ca-ES","ca-FR","ca-IT","ce-RU","ch-GU","ch-MP","co-FR","cs-CZ","cv-RU","cy-AR","cy-GB","da-DE","da-DK","da-GL","da-IS","de-AT","de-BE","de-BR","de-CA","de-CH","de-CZ","de-DE","de-DK","de-HU","de-IT","de-KZ","de-LI","de-LU","de-NA","de-PL","de-PY","de-RO","de-SK","de-US","dv-IN","dv-MV","dz-BT","dz-IN","ee-GH","ee-TG","el-AL","el-CY","el-DE","el-EG","el-GB","el-GR","el-IT","el-RO","el-TR","el-UA","en-AC","en-AG","en-AI","en-AS","en-AU","en-AW","en-BB","en-BE","en-BM","en-BN","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CN","en-CX","en-DE","en-DG","en-DM","en-DO","en-ES","en-ET","en-FI","en-FJ","en-FK","en-FM","en-FR","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-HN","en-IE","en-IL","en-IM","en-IN","en-IO","en-IT","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LB","en-LC","en-LK","en-LR","en-LS","en-MG","en-MH","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NL","en-NR","en-NU","en-NZ","en-PA","en-PG","en-PH","en-PI","en-PK","en-PM","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SG","en-SH","en-SL","en-SS","en-SZ","en-TA","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UD","en-UG","en-UM","en-US","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-EO","eo-SM","es-AD","es-AR","es-BO","es-BZ","es-CL","es-CO","es-CR","es-CU","es-DE","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC","es-LA","es-MA","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-TT","es-US","es-UY","es-VE","et-EE","et-FI","eu-ES","eu-FR","fa-AE","fa-AF","fa-IQ","fa-IR","fa-OM","fa-PK","fa-QA","fa-TJ","fb-LT","ff-GN","ff-MR","ff-SN","fi-FI","fi-RU","fi-SE","fj-FJ","fo-FO","fr-AD","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-CP","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GB","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-IT","fr-KM","fr-LB","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TF","fr-TG","fr-TN","fr-US","fr-VU","fr-WF","fr-YT","fy-NL","ga-GB","ga-IE","gd-GB","gl-ES","gl-PT","gn-AR","gn-BO","gn-PY","gu-IN","gu-KE","gv-IM","he-IL","hi-FJ","hi-IN","hi-NP","hi-UG","hi-ZA","ho-PG","hr-AT","hr-BA","hr-DE","hr-HR","hr-HU","hr-IT","ht-HT","hu-AT","hu-HU","hu-IL","hu-RO","hu-RS","hu-SI","hu-SK","hu-UA","hy-AM","hy-CY","hy-GE","hy-IR","hy-LB","hy-SY","hy-TR","ia-SE","id-ID","id-NL","ig-NG","ii-CN","ik-US","is-IS","it-AU","it-BR","it-CA","it-CH","it-DE","it-FR","it-GB","it-HR","it-IT","it-SI","it-SM","it-US","it-VA","iu-GL","ja-BR","ja-JP","jv-ID","jv-MY","ka-GE","ka-IR","ka-TR","kg-CD","ki-KE","kj-NA","kl-DK","kl-GL","km-KH","kn-IN","ko-BR","ko-CN","ko-JP","ko-KP","ko-KR","ko-US","ks-GB","ks-IN","ks-PK","ku-TR","kw-GB","la-VA","lb-LU","lg-UG","li-NL","ln-CD","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mh-MH","mi-NZ","mk-AL","mk-GR","mk-MK","ml-AE","ml-BH","ml-GB","ml-IL","ml-IN","ml-MY","ml-QA","ml-SG","mr-IN","ms-BN","ms-CC","ms-ID","ms-MY","ms-SG","mt-MT","my-BD","my-MM","na-NR","nb-NO","nb-SJ","nd-ZW","ne-BT","ne-IN","ne-NP","ng-NA","nl-AW","nl-BE","nl-DE","nl-FR","nl-NL","nl-SR","nn-NO","nr-ZA","nv-US","ny-MW","ny-MZ","ny-ZM","ny-ZW","oc-FR","om-ET","om-KE","om-SO","or-IN","os-GE","pa-IN","pl-CZ","pl-DE","pl-IL","pl-PL","pl-RO","pl-SK","pl-UA","ps-AE","ps-AF","ps-IR","ps-PK","pt-AG","pt-AO","pt-BR","pt-CV","pt-FR","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-PE","rm-CH","rn-BI","ro-HU","ro-IL","ro-MD","ro-RO","ro-RS","ro-UA","ru-BY","ru-CN","ru-DE","ru-EE","ru-FI","ru-GE","ru-IL","ru-KG","ru-KZ","ru-LT","ru-LV","ru-MD","ru-MN","ru-RU","ru-SJ","ru-TM","ru-UA","ru-US","ru-UZ","rw-CD","rw-RW","rw-UG","sa-IN","se-FI","se-NO","se-SE","sg-CF","si-LK","sk-HU","sk-RS","sk-SK","sl-AT","sl-HU","sl-IT","sl-SI","sm-AS","sm-WS","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-GR","sq-ME","sq-MK","sq-RS","sq-TR","sr-RS","ss-LS","ss-SZ","ss-ZA","st-LS","st-ZA","su-ID","sv-AX","sv-FI","sv-SE","sw-BI","sw-CD","sw-KE","sw-MZ","sw-SO","sw-TZ","sw-UG","sw-YT","sw-ZA","ta-IN","ta-LK","ta-MU","ta-MY","ta-RE","ta-SG","te-IN","th-TH","ti-ER","ti-ET","ti-IL","tk-AF","tk-IR","tk-TM","tl-PH","tl-US","tn-BW","tn-NA","tn-ZA","tn-ZW","to-TO","tr-BG","tr-CY","tr-DE","tr-GR","tr-MK","tr-NL","tr-RO","tr-TR","tr-UA","tr-UZ","ts-MZ","ts-SZ","ts-ZA","tt-RU","ty-PF","uk-PL","uk-SK","uk-UA","ur-IN","ur-MU","ur-PK","ve-ZA","ve-ZW","vi-CN","vi-US","vi-VN","wa-BE","xh-LS","xh-ZA","yi-UA","yo-BJ","yo-NG","za-CN","zh-CN","zh-HK","zh-TW","zu-LS","zu-MW","zu-MZ","zu-SZ","zu-ZA","langToLocaleMapping","LOCALE_DEFAULT_LOCALE","InjectionToken","LOCALE_LANG_MAPPING","LOCALE_CONFIG","LOCALE_CURRENCY_MAPPING","TRANSLOCO_DATE_TRANSFORMER","TRANSLOCO_NUMBER_TRANSFORMER","DefaultDateTransformer","transform","options","localizeDate","Intl","DateTimeFormat","format","DefaultNumberTransformer","localizeNumber","number","toNumber","NumberFormat","style","TranslocoLocaleService","getLocale","_locale","setLocale","console","getCurrencySymbol","currency","localeCurrencyMapping","currencyDisplay","minimumFractionDigits","maximumFractionDigits","toString","element","find","dateTransformer","_resolveCurrencyCode","numberTransformer","toLocale","langLocaleMapping","ngOnDestroy","subscription","unsubscribe","Injectable","args","providedIn","TranslocoService","Inject","translocoService","getActiveLang","BehaviorSubject","localeChanges$","asObservable","pipe","distinctUntilChanged","langChanges$","bind","filter","lang","subscribe","TranslocoLocalePipe","translocoLocaleService","onDestroy","cdr","_this","markForCheck","tslib_1.__extends","TranslocoCurrencyPipe","display","numberFormatOptions","currencyCode","isNil","_super","Pipe","name","pure","ChangeDetectorRef","TranslocoDatePipe","TranslocoDecimalPipe","TranslocoPercentPipe","pipes","TranslocoLocaleModule","init","config","ngModule","providers","provide","useValue","useClass","NgModule","declarations","exports"],"mappings":"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"}