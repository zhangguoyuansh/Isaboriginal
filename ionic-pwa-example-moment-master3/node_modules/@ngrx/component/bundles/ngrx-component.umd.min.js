!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@ngrx/component",["exports","@angular/core","rxjs","rxjs/operators"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).ngrx=e.ngrx||{},e.ngrx.component={}),e.ng.core,e.rxjs,e.rxjs.operators)}(this,(function(e,t,r,n){"use strict";function i(e){var t=new r.Subject,i=t.pipe(n.distinctUntilChanged()).pipe(n.switchMap((function(t){if(null==t)return e.updateViewContextObserver.next(t),e.render(),r.EMPTY;var i=r.isObservable(t)?t:r.from(t);return e.resetContextObserver.next(),e.render(),i.pipe(n.distinctUntilChanged(),n.tap(e.updateViewContextObserver),n.tap((function(){return e.render()})),n.catchError((function(e){return r.EMPTY})))})));return{nextPotentialObservable:function(e){t.next(e)},subscribe:function(){return i.subscribe()}}}function o(e){return function(){e.ngZone instanceof t.NgZone?e.cdRef.markForCheck():e.cdRef.detectChanges()}}var s=function(){function e(e,t){var r=this;this.resetContextObserver={next:function(){return r.renderedValue=void 0}},this.updateViewContextObserver={next:function(e){return r.renderedValue=e}},this.cdAware=i({render:o({cdRef:e,ngZone:t}),updateViewContextObserver:this.updateViewContextObserver,resetContextObserver:this.resetContextObserver}),this.subscription=this.cdAware.subscribe()}return e.prototype.transform=function(e){return this.cdAware.nextPotentialObservable(e),this.renderedValue},e.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},e}();s.decorators=[{type:t.Pipe,args:[{name:"ngrxPush",pure:!1}]}],s.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:t.NgZone}]};var c=function(){function e(e,t,r,n){var s=this;this.templateRef=r,this.viewContainerRef=n,this.ViewContext={$implicit:void 0,ngrxLet:void 0,$error:!1,$complete:!1},this.resetContextObserver={next:function(){s.embeddedView&&(s.ViewContext.$implicit=void 0,s.ViewContext.ngrxLet=void 0,s.ViewContext.$error=!1,s.ViewContext.$complete=!1)}},this.updateViewContextObserver={next:function(e){s.embeddedView||s.createEmbeddedView(),s.ViewContext.$implicit=e,s.ViewContext.ngrxLet=e},error:function(e){s.embeddedView||s.createEmbeddedView(),s.ViewContext.$error=!0},complete:function(){s.embeddedView||s.createEmbeddedView(),s.ViewContext.$complete=!0}},this.cdAware=i({render:o({cdRef:e,ngZone:t}),resetContextObserver:this.resetContextObserver,updateViewContextObserver:this.updateViewContextObserver}),this.subscription=this.cdAware.subscribe()}return e.ngTemplateContextGuard=function(e,t){return!0},Object.defineProperty(e.prototype,"ngrxLet",{set:function(e){this.cdAware.nextPotentialObservable(e)},enumerable:!1,configurable:!0}),e.prototype.createEmbeddedView=function(){this.embeddedView=this.viewContainerRef.createEmbeddedView(this.templateRef,this.ViewContext)},e.prototype.ngOnDestroy=function(){this.subscription.unsubscribe(),this.viewContainerRef.clear()},e}();c.decorators=[{type:t.Directive,args:[{selector:"[ngrxLet]"}]}],c.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:t.NgZone},{type:t.TemplateRef},{type:t.ViewContainerRef}]},c.propDecorators={ngrxLet:[{type:t.Input}]};var u=[c,s],d=[u],a=function(){};a.decorators=[{type:t.NgModule,args:[{declarations:[u],exports:[d]}]}],e.LetDirective=c,e.PushPipe=s,e.ReactiveComponentModule=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngrx-component.umd.min.js.map